const config = {  "folderPath": "C:/Users/queej/Documents/Coding/Galanarius/Assets/Scripts",  "fileTree": {    "subDir": [      {        "subDir": [          {            "subDir": [],            "currentDirectory": "Building.cs",            "filePaths": [              "\\Building.cs"            ],            "prevDirectory": "C:\\Users\\queej\\Documents\\Coding\\Galanarius\\Assets\\Scripts\\Buildings",            "fileRepresentation": {              "imports": [                "System.Collections",                "System.Collections.Generic",                "UnityEngine"              ],              "variables": {                "private": [                  {                    "attributes": [                      "private",                      "BuildingType"                    ],                    "description": "The type of the building. \\nSet to BuildingType.Blank by default, but should be set on creation. ",                    "accessMod": "private",                    "varName": "_buildingType",                    "dirtyType": "Buildings.BuildingType",                    "cleanType": "BuildingType"                  },                  {                    "attributes": [                      "private",                      "string"                    ],                    "description": "The name of the building. Currently unused. ",                    "accessMod": "private",                    "varName": "_name",                    "dirtyType": "System.String",                    "cleanType": "string"                  },                  {                    "attributes": [                      "private",                      "int"                    ],                    "description": "The x position of the building. ",                    "accessMod": "private",                    "varName": "_x",                    "dirtyType": "System.Int32",                    "cleanType": "int"                  },                  {                    "attributes": [                      "private",                      "int"                    ],                    "description": "The y position of the building. ",                    "accessMod": "private",                    "varName": "_y",                    "dirtyType": "System.Int32",                    "cleanType": "int"                  },                  {                    "attributes": [                      "private",                      "int"                    ],                    "description": "The rotation of the building. \\nCan be set to 0-3 inclusive. ",                    "accessMod": "private",                    "varName": "_rotation",                    "dirtyType": "System.Int32",                    "cleanType": "int"                  },                  {                    "attributes": [                      "private",                      "int"                    ],                    "description": "The size of the grid. Should be 50 all around for now ",                    "accessMod": "private",                    "varName": "_size",                    "dirtyType": "System.Int32",                    "cleanType": "int"                  },                  {                    "attributes": [                      "private",                      "float"                    ],                    "description": "The next time the OnTick should occur. ",                    "accessMod": "private",                    "varName": "_nextTime",                    "dirtyType": "System.Single",                    "cleanType": "float"                  },                  {                    "attributes": [                      "private",                      "float"                    ],                    "description": "The time betwween OnTick events. ",                    "accessMod": "private",                    "varName": "_tickTime",                    "dirtyType": "System.Single",                    "cleanType": "float"                  },                  {                    "attributes": [                      "private",                      "GameObject"                    ],                    "description": "A reference to the grid object. Set on creation ",                    "accessMod": "private",                    "varName": "_grid",                    "dirtyType": "UnityEngine.GameObject",                    "cleanType": "GameObject"                  },                  {                    "attributes": [                      "private",                      "NodeManager"                    ],                    "description": "A reference to the node manager object. Set on creation. ",                    "accessMod": "private",                    "varName": "_nodeManager",                    "dirtyType": "NodeManager",                    "cleanType": "NodeManager"                  }                ]              },              "inheritance": [                "NO INHERITANCE"              ],              "accessModifier": "public",              "className": "Building",              "description": " <summary> Stores the information of a building for on-screen use </summary>",              "filePath": "C:\\Users\\queej\\Documents\\Coding\\Galanarius\\Assets\\Scripts\\Buildings\\Building.cs",              "nameSpace": "Buildings",              "declaration": "public class Building",              "functions": {                "public": [                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_buildingType"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "value",                        "Item2": "Buildings.BuildingType",                        "Item3": null                      }                    ],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "set_buildingType"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_name"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_x"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "value",                        "Item2": "System.Int32",                        "Item3": null                      }                    ],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "set_x"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_y"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "value",                        "Item2": "System.Int32",                        "Item3": null                      }                    ],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "set_y"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_rotation"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "value",                        "Item2": "System.Int32",                        "Item3": null                      }                    ],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "set_rotation"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_size"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "value",                        "Item2": "System.Int32",                        "Item3": null                      }                    ],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "set_size"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_nextTime"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "value",                        "Item2": "System.Single",                        "Item3": null                      }                    ],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "set_nextTime"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_tickTime"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_tickTimeBelt"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_tickTimeGatherer"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_grid"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_nodeManager"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_resource"                  }                ]              }            }          },          {            "subDir": [],            "currentDirectory": "BuildingManager.cs",            "filePaths": [              "\\BuildingManager.cs"            ],            "prevDirectory": "C:\\Users\\queej\\Documents\\Coding\\Galanarius\\Assets\\Scripts\\Buildings",            "fileRepresentation": {              "imports": [                "System.Collections",                "System.Collections.Generic",                "UnityEngine"              ],              "variables": {                "private": [                  {                    "attributes": [                      "private",                      "RectTransform"                    ],                    "description": "A reference to the RectTransform component of the GameObject this component resides on. Set in Start(). ",                    "accessMod": "private",                    "varName": "_tranform",                    "dirtyType": "UnityEngine.RectTransform",                    "cleanType": "RectTransform"                  },                  {                    "attributes": [                      "private",                      "Building"                    ],                    "description": "All the data that defines the BuildingManager. Stored in a separate class (Building) so that it can be properly serialized for persistence sake. ",                    "accessMod": "private",                    "varName": "_data",                    "dirtyType": "Buildings.Building",                    "cleanType": "Building"                  },                  {                    "attributes": [                      "private",                      "float"                    ],                    "description": "The nextTime the OnTick method should be called. ",                    "accessMod": "private",                    "varName": "nextTime",                    "dirtyType": "System.Single",                    "cleanType": "float"                  },                  {                    "attributes": [                      "private",                      "bool"                    ],                    "description": "Defines whether or not the OnTick method should be called when the time comes. ",                    "accessMod": "private",                    "varName": "_paused",                    "dirtyType": "System.Boolean",                    "cleanType": "bool"                  },                  {                    "attributes": [                      "OnTick"                    ],                    "description": "The instance of the OnTick delegate used by this class. ",                    "accessMod": "private",                    "varName": "onTick",                    "dirtyType": "Buildings.BuildingManager+OnTick",                    "cleanType": "OnTick"                  }                ]              },              "inheritance": [                " MonoBehaviour"              ],              "accessModifier": "public",              "className": "BuildingManager",              "description": " All the types a building can be <summary> The component representation of a building. What is shown on screen. </summary>",              "filePath": "C:\\Users\\queej\\Documents\\Coding\\Galanarius\\Assets\\Scripts\\Buildings\\BuildingManager.cs",              "nameSpace": "Buildings",              "declaration": "public class BuildingManager : MonoBehaviour",              "functions": {                "private": [                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "<summary> Runs on the first frame after the component is activated for the first time. </summary> ",                    "accessModifier": "private",                    "functionName": "Start"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "<summary> Is called every frame. Checks if enough time has passed to call OnTick again. </summary> ",                    "accessModifier": "private",                    "functionName": "Update"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "x",                        "Item2": "System.Int32",                        "Item3": null                      },                      {                        "Item1": "y",                        "Item2": "System.Int32",                        "Item3": null                      }                    ],                    "cleanParamList": [                      {                        "Item1": "int x,",                        "Item2": null                      },                      {                        "Item1": "int y",                        "Item2": null                      }                    ],                    "modifiers": [],                    "description": "<summary> Updates the world position of the GameObject relative to the new x and y values passed in, the old x and y values, and the size of the building. </summary> <param name=\"x\">The x coordinate to move the building to.</param> <param name=\"y\">The y coordinate to move the building to.</param> ",                    "accessModifier": "private",                    "functionName": "UpdateCoords"                  }                ],                "public": [                  {                    "dirtyParamList": [                      {                        "Item1": "x",                        "Item2": "System.Int32",                        "Item3": null                      },                      {                        "Item1": "y",                        "Item2": "System.Int32",                        "Item3": null                      }                    ],                    "cleanParamList": [                      {                        "Item1": "int x,",                        "Item2": null                      },                      {                        "Item1": "int y",                        "Item2": null                      }                    ],                    "modifiers": [],                    "description": "<summary> Updates the world position of the GameObject this component is attached to, and sets its new coordinates. </summary> <param name=\"x\">The x coordinate to move the building to.</param> <param name=\"y\">The y coordinate to move the building to.</param> ",                    "accessModifier": "public",                    "functionName": "SetCoords"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "rot",                        "Item2": "System.Int32",                        "Item3": null                      }                    ],                    "cleanParamList": [                      {                        "Item1": "int rot",                        "Item2": null                      }                    ],                    "modifiers": [],                    "description": "<summary> Updates the world rotation of the GameObject this component is attached to, and sets its new rotation. </summary> <param name=\"rot\">An integer 0-3 inclusive to set the rotation to.</param> ",                    "accessModifier": "public",                    "functionName": "SetRotation"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_name"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_data"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "value",                        "Item2": "Buildings.Building",                        "Item3": null                      }                    ],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "set_data"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_paused"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "value",                        "Item2": "System.Boolean",                        "Item3": null                      }                    ],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "set_paused"                  }                ],                "protected": [                  {                    "dirtyParamList": [                      {                        "Item1": "rot",                        "Item2": "System.Int32",                        "Item3": null                      }                    ],                    "cleanParamList": [                      {                        "Item1": "int rot",                        "Item2": null                      }                    ],                    "modifiers": [],                    "description": "<summary> Updates the world rotation of the GameObject relative to the new rotation value passed in, and the old rotation value, both scaled up 90 times (to convert to worldspace degrees). </summary> <param name=\"rot\"></param> ",                    "accessModifier": "protected",                    "functionName": "UpdateRotation"                  }                ]              }            }          },          {            "subDir": [],            "currentDirectory": "BuildingProcessor.cs",            "filePaths": [              "\\BuildingProcessor.cs"            ],            "prevDirectory": "C:\\Users\\queej\\Documents\\Coding\\Galanarius\\Assets\\Scripts\\Buildings",            "fileRepresentation": {              "imports": [                "System",                "System.Linq",                "System.Reflection",                "System.Collections",                "System.Collections.Generic",                "UnityEngine",                "UnityEngine.UI"              ],              "variables": {                "private": [                  {                    "attributes": [                      "private",                      "static",                      " Dictionary<BuildingType, BuildingManager.OnTick>"                    ],                    "description": "Relates types of buildings (of type BuildingType) to delegate methods (of type BuildingManager.OnTick). ",                    "accessMod": "private",                    "varName": "buildingsByType",                    "dirtyType": "System.Collections.Generic.Dictionary`2[Buildings.BuildingType,Buildings.BuildingManager+OnTick]",                    "cleanType": " Dictionary<BuildingType, BuildingManager.OnTick>"                  },                  {                    "attributes": [                      "private",                      "static",                      " Dictionary<BuildingType, BuildingItem.PlacingSet>"                    ],                    "description": "Relates types of buildings (of type BuildingType) to delegate methods (of type BuildingItem.PlacingSet). ",                    "accessMod": "private",                    "varName": "buildingItemsByType",                    "dirtyType": "System.Collections.Generic.Dictionary`2[Buildings.BuildingType,Buildings.BuildingItem+PlacingSet]",                    "cleanType": " Dictionary<BuildingType, BuildingItem.PlacingSet>"                  }                ]              },              "inheritance": [                "NO INHERITANCE"              ],              "accessModifier": "publicstatic",              "className": "BuildingProcessor",              "description": " <summary> A static class which stores dictionaries which relates building type keys to BuildingManager.OnTick delegate methods, and BuildingItem.PlacingSet delegate methods. </summary>",              "filePath": "C:\\Users\\queej\\Documents\\Coding\\Galanarius\\Assets\\Scripts\\Buildings\\BuildingProcessor.cs",              "nameSpace": "Buildings",              "declaration": "public static class BuildingProcessor",              "functions": {                "private": [                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [                      "static"                    ],                    "description": "",                    "accessModifier": "private",                    "functionName": "get_IsInitialized"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [                      "static"                    ],                    "description": "<summary> Must run before any other method is called to set up the factory pattern in the class. \\nWill be called automatically when any of the class' methods are called. </summary> ",                    "accessModifier": "private",                    "functionName": "InitializeFactory"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "d",                        "Item2": "Buildings.Building",                        "Item3": null                      }                    ],                    "cleanParamList": [                      {                        "Item1": "Building d",                        "Item2": null                      }                    ],                    "modifiers": [                      "static"                    ],                    "description": "<summary> A placeholder delegate for the placeholder building type \"Blank\" in the context of on screen buildings. </summary> <param name=\"d\">The data of the building calling the delegate.</param> ",                    "accessModifier": "private",                    "functionName": "BlankMethod"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "p",                        "Item2": "Buildings.PlacingSystem",                        "Item3": null                      }                    ],                    "cleanParamList": [                      {                        "Item1": "PlacingSystem p",                        "Item2": null                      }                    ],                    "modifiers": [                      "static"                    ],                    "description": "<summary> A placeholder delegate for the placeholder building type \"Blank\" in the context of items </summary> <param name=\"p\">The data of the building calling the delegate.</param> ",                    "accessModifier": "private",                    "functionName": "ItemBlank"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "d",                        "Item2": "Buildings.Building",                        "Item3": null                      }                    ],                    "cleanParamList": [                      {                        "Item1": "Building d",                        "Item2": null                      }                    ],                    "modifiers": [                      "static"                    ],                    "description": "<summary> The gathererI OnTick method. </summary> <param name=\"d\">The building ticking.</param> ",                    "accessModifier": "private",                    "functionName": "GathererIMethod"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "p",                        "Item2": "Buildings.PlacingSystem",                        "Item3": null                      }                    ],                    "cleanParamList": [                      {                        "Item1": "PlacingSystem p",                        "Item2": null                      }                    ],                    "modifiers": [                      "static"                    ],                    "description": "<summary> The gathererI PlacingSet method. </summary> <param name=\"p\">The current PlacingSystem instance.</param> ",                    "accessModifier": "private",                    "functionName": "ItemGathererI"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "d",                        "Item2": "Buildings.Building",                        "Item3": null                      }                    ],                    "cleanParamList": [                      {                        "Item1": "Building d",                        "Item2": null                      }                    ],                    "modifiers": [                      "static"                    ],                    "description": "<summary> The gathererII OnTick method. Instantiates two catty-corner resource instance with a type from the paramter d. </summary> <param name=\"d\">The building ticking.</param> ",                    "accessModifier": "private",                    "functionName": "GathererIIMethod"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "p",                        "Item2": "Buildings.PlacingSystem",                        "Item3": null                      }                    ],                    "cleanParamList": [                      {                        "Item1": "PlacingSystem p",                        "Item2": null                      }                    ],                    "modifiers": [                      "static"                    ],                    "description": "<summary> The gathererII PlacingSet method. </summary> <param name=\"p\">The current PlacingSystem instance.</param> ",                    "accessModifier": "private",                    "functionName": "ItemGathererII"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "d",                        "Item2": "Buildings.Building",                        "Item3": null                      }                    ],                    "cleanParamList": [                      {                        "Item1": "Building d",                        "Item2": null                      }                    ],                    "modifiers": [                      "static"                    ],                    "description": "",                    "accessModifier": "private",                    "functionName": "GathererIIIMethod"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "p",                        "Item2": "Buildings.PlacingSystem",                        "Item3": null                      }                    ],                    "cleanParamList": [                      {                        "Item1": "PlacingSystem p",                        "Item2": null                      }                    ],                    "modifiers": [                      "static"                    ],                    "description": "",                    "accessModifier": "private",                    "functionName": "ItemGathererIII"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "d",                        "Item2": "Buildings.Building",                        "Item3": null                      }                    ],                    "cleanParamList": [                      {                        "Item1": "Building d",                        "Item2": null                      }                    ],                    "modifiers": [                      "static"                    ],                    "description": "",                    "accessModifier": "private",                    "functionName": "GathererIVMethod"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "p",                        "Item2": "Buildings.PlacingSystem",                        "Item3": null                      }                    ],                    "cleanParamList": [                      {                        "Item1": "PlacingSystem p",                        "Item2": null                      }                    ],                    "modifiers": [                      "static"                    ],                    "description": "",                    "accessModifier": "private",                    "functionName": "ItemGathererIV"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "d",                        "Item2": "Buildings.Building",                        "Item3": null                      }                    ],                    "cleanParamList": [                      {                        "Item1": "Building d",                        "Item2": null                      }                    ],                    "modifiers": [                      "static"                    ],                    "description": "",                    "accessModifier": "private",                    "functionName": "BeltMethod"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "p",                        "Item2": "Buildings.PlacingSystem",                        "Item3": null                      }                    ],                    "cleanParamList": [                      {                        "Item1": "PlacingSystem p",                        "Item2": null                      }                    ],                    "modifiers": [                      "static"                    ],                    "description": "",                    "accessModifier": "private",                    "functionName": "ItemBelt"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "d",                        "Item2": "Buildings.Building",                        "Item3": null                      }                    ],                    "cleanParamList": [                      {                        "Item1": "Building d",                        "Item2": null                      }                    ],                    "modifiers": [                      "static"                    ],                    "description": "",                    "accessModifier": "private",                    "functionName": "CollectorMethod"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "p",                        "Item2": "Buildings.PlacingSystem",                        "Item3": null                      }                    ],                    "cleanParamList": [                      {                        "Item1": "PlacingSystem p",                        "Item2": null                      }                    ],                    "modifiers": [                      "static"                    ],                    "description": "",                    "accessModifier": "private",                    "functionName": "ItemCollector"                  }                ],                "public": [                  {                    "dirtyParamList": [                      {                        "Item1": "building",                        "Item2": "Buildings.Building",                        "Item3": null                      }                    ],                    "cleanParamList": [                      {                        "Item1": "Building building",                        "Item2": null                      }                    ],                    "modifiers": [                      "static"                    ],                    "description": "<summary> Takes in a building object, and returns the corresponding delegate to its buildingType variable (of type BuildingType). </summary> <param name=\"building\">The building to find the OnTick delegate for.</param> <returns>Returns null if no suitable delegate is found, or returns the delegate method (of type BuildingManager.OnTick) if one exists.</returns> ",                    "accessModifier": "public",                    "functionName": "GetBuildingMethod"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "building",                        "Item2": "Buildings.BuildingType",                        "Item3": null                      }                    ],                    "cleanParamList": [                      {                        "Item1": "BuildingType building",                        "Item2": null                      }                    ],                    "modifiers": [                      "static"                    ],                    "description": "<summary> Takes in a building type, and returns the corresponding delegate. </summary> <param name=\"building\">The building type to find the PlacingSet delegate for.</param> <returns>Returns null if no suitable delegate is found, or returns the delegate method (of type BuildingItem.PlacingSet) if one exists.</returns> ",                    "accessModifier": "public",                    "functionName": "GetBuildingItemMethod"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "building",                        "Item2": "Buildings.BuildingType",                        "Item3": null                      }                    ],                    "cleanParamList": [                      {                        "Item1": "BuildingType building",                        "Item2": null                      }                    ],                    "modifiers": [                      "static"                    ],                    "description": "<summary> Returns the sprite resource for the given buildingtype (found in runtime, not at the time of InitializeFactory) </summary> <param name=\"building\">The building type to find an image for</param> <returns>Returns null if the building type is not registered, returning the corresponding Sprite if it is.</returns> ",                    "accessModifier": "public",                    "functionName": "GetBuildingImage"                  }                ],                "internal": [                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [                      "static"                    ],                    "description": "<summary> Returns all keys from the OnTick delegate Dictionary. </summary> <returns>All the keys of the OnTick delegate Dictionary (all the registered building types).</returns> ",                    "accessModifier": "internal",                    "functionName": "GetBuildingNames"                  }                ]              }            }          },          {            "subDir": [],            "currentDirectory": "PlacingSystem.cs",            "filePaths": [              "\\PlacingSystem.cs"            ],            "prevDirectory": "C:\\Users\\queej\\Documents\\Coding\\Galanarius\\Assets\\Scripts\\Buildings",            "fileRepresentation": {              "imports": [                "System.Collections",                "System.Collections.Generic",                "UnityEngine",                "UnityEngine.UI"              ],              "variables": {                "private": [                  {                    "attributes": [                      "private",                      "BuildingType"                    ],                    "description": "The current type of building in the user's \"hand\". Referenced when the player uses the place action. ",                    "accessMod": "private",                    "varName": "_buildingType",                    "dirtyType": "Buildings.BuildingType",                    "cleanType": "BuildingType"                  },                  {                    "attributes": [                      "private",                      "LogisticsViewChange"                    ],                    "description": "A reference to the component managing the logistics view. ",                    "accessMod": "private",                    "varName": "_logisticsView",                    "dirtyType": "LogisticsViewChange",                    "cleanType": "LogisticsViewChange"                  },                  {                    "attributes": [                      "private",                      "NodeManager"                    ],                    "description": "A reference to the nodeManager component. ",                    "accessMod": "private",                    "varName": "nodeManager",                    "dirtyType": "NodeManager",                    "cleanType": "NodeManager"                  },                  {                    "attributes": [                      "private",                      "int"                    ],                    "description": "The previous _x value. ",                    "accessMod": "private",                    "varName": "_oldx",                    "dirtyType": "System.Int32",                    "cleanType": "int"                  },                  {                    "attributes": [                      "private",                      "int"                    ],                    "description": "The previous _y value. ",                    "accessMod": "private",                    "varName": "_oldy",                    "dirtyType": "System.Int32",                    "cleanType": "int"                  },                  {                    "attributes": [                      "private",                      "int"                    ],                    "description": "The grid x coordiante of the mouse. ",                    "accessMod": "private",                    "varName": "_x",                    "dirtyType": "System.Int32",                    "cleanType": "int"                  },                  {                    "attributes": [                      "private",                      "int"                    ],                    "description": "The grid y coordinate of the mouse. ",                    "accessMod": "private",                    "varName": "_y",                    "dirtyType": "System.Int32",                    "cleanType": "int"                  },                  {                    "attributes": [                      "private",                      "int"                    ],                    "description": "The size of each tile on the grid. ",                    "accessMod": "private",                    "varName": "size",                    "dirtyType": "System.Int32",                    "cleanType": "int"                  },                  {                    "attributes": [                      "private",                      "Sprite"                    ],                    "description": "The previous _sprite value. ",                    "accessMod": "private",                    "varName": "_oldSprite",                    "dirtyType": "UnityEngine.Sprite",                    "cleanType": "Sprite"                  },                  {                    "attributes": [                      "private",                      "Sprite"                    ],                    "description": "The sprite of the building to be placed. ",                    "accessMod": "private",                    "varName": "_sprite",                    "dirtyType": "UnityEngine.Sprite",                    "cleanType": "Sprite"                  },                  {                    "attributes": [                      "private",                      "bool"                    ],                    "description": "If the 'r' key is being pressed this frame. ",                    "accessMod": "private",                    "varName": "_rPressed",                    "dirtyType": "System.Boolean",                    "cleanType": "bool"                  },                  {                    "attributes": [                      "private",                      "bool"                    ],                    "description": "If the 'r' key has been let up since it was last down. ",                    "accessMod": "private",                    "varName": "_rLetUp",                    "dirtyType": "System.Boolean",                    "cleanType": "bool"                  }                ]              },              "inheritance": [                " MonoBehaviour"              ],              "accessModifier": "public",              "className": "PlacingSystem",              "description": " <summary> Processes user inputs and interacts with buildings in game appropriately. </summary>",              "filePath": "C:\\Users\\queej\\Documents\\Coding\\Galanarius\\Assets\\Scripts\\Buildings\\PlacingSystem.cs",              "nameSpace": "Buildings",              "declaration": "public class PlacingSystem : MonoBehaviour",              "functions": {                "private": [                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "<summary> Runs every frame to get user input. Ensures that the r reads in key press, not key down, and processes the rotation behavior appropriately. \\nAlso checks for mouse down events in order to place, or replace a building at the mouse position. \\nFinally, checks for the space key being down in order to toggle whether the simulation is paused or not. </summary> ",                    "accessModifier": "private",                    "functionName": "Update"                  }                ],                "public": [                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_buildingType"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_oldx"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "value",                        "Item2": "System.Int32",                        "Item3": null                      }                    ],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "set_oldx"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_oldy"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "value",                        "Item2": "System.Int32",                        "Item3": null                      }                    ],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "set_oldy"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_x"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "value",                        "Item2": "System.Int32",                        "Item3": null                      }                    ],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "set_x"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_y"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "value",                        "Item2": "System.Int32",                        "Item3": null                      }                    ],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "set_y"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_oldSprite"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "value",                        "Item2": "UnityEngine.Sprite",                        "Item3": null                      }                    ],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "set_oldSprite"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_sprite"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "value",                        "Item2": "UnityEngine.Sprite",                        "Item3": null                      }                    ],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "set_sprite"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "<summary> Shows a debug statement in the console to announce that the button clicked on would've set the type to blank. </summary> ",                    "accessModifier": "public",                    "functionName": "SetBlank"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "<summary> Sets the current building type to gathererI. </summary> ",                    "accessModifier": "public",                    "functionName": "SetGathererI"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "<summary> Sets the current building type to gathererII. </summary> ",                    "accessModifier": "public",                    "functionName": "SetGathererII"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "<summary> Sets the current building type to gathererIII. </summary> ",                    "accessModifier": "public",                    "functionName": "SetGathererIII"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "<summary> Sets the current building type to gathererIV </summary> ",                    "accessModifier": "public",                    "functionName": "SetGathererIV"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "<summary> Sets the current building type to belt. </summary> ",                    "accessModifier": "public",                    "functionName": "SetBelt"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "<summary> Sets the current building type to collector. </summary> ",                    "accessModifier": "public",                    "functionName": "SetCollector"                  }                ]              }            }          }        ],        "currentDirectory": "Buildings",        "filePaths": [          "\\Buildings\\Building.cs"        ],        "prevDirectory": "C:\\Users\\queej\\Documents\\Coding\\Galanarius\\Assets\\Scripts",        "fileRepresentation": null      },      {        "subDir": [          {            "subDir": [],            "currentDirectory": "Galaxy.cs",            "filePaths": [              "\\Galaxy.cs"            ],            "prevDirectory": "C:\\Users\\queej\\Documents\\Coding\\Galanarius\\Assets\\\\Scripts\\Map",            "fileRepresentation": {              "imports": [                "System.Collections",                "System.Collections.Generic",                "UnityEngine"              ],              "variables": {                "private": [                  {                    "attributes": [                      "private",                      "int"                    ],                    "description": "The x-dimensions of the galaxy ",                    "accessMod": "private",                    "varName": "xSize",                    "dirtyType": "System.Int32",                    "cleanType": "int"                  },                  {                    "attributes": [                      "private",                      "int"                    ],                    "description": "The y-dimensions of the galaxy ",                    "accessMod": "private",                    "varName": "ySize",                    "dirtyType": "System.Int32",                    "cleanType": "int"                  },                  {                    "attributes": [                      "private",                      "string"                    ],                    "description": "The reference ID of the galaxy (g##) ",                    "accessMod": "private",                    "varName": "galaxyID",                    "dirtyType": "System.String",                    "cleanType": "string"                  },                  {                    "attributes": [                      "private",                      "Sector[,]"                    ],                    "description": "A matrix holding the map divided into the scope of sector. \\nThe dimensions of the matrix are xSize and ySize. ",                    "accessMod": "private",                    "varName": "sectors",                    "dirtyType": "Sector[,]",                    "cleanType": "Sector[,]"                  }                ]              },              "inheritance": [                "NO INHERITANCE"              ],              "accessModifier": "public",              "className": "Galaxy",              "description": " <summary> Stores the map information at the scope of a galaxy and below. </summary>",              "filePath": "C:\\Users\\queej\\Documents\\Coding\\Galanarius\\Assets\\\\Scripts\\Map\\Galaxy.cs",              "nameSpace": "",              "declaration": "public class Galaxy",              "functions": {                "private": [                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "<summary> Generates the 2 digits that form the ID of the galaxy. </summary> <returns>The generated ID.</returns> ",                    "accessModifier": "private",                    "functionName": "GenID"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "part",                        "Item2": "System.Boolean",                        "Item3": null                      }                    ],                    "cleanParamList": [                      {                        "Item1": "bool part",                        "Item2": null                      }                    ],                    "modifiers": [],                    "description": "<summary> Executes the algorithm to fill in all the smaller scope layer of the map. </summary> <param name=\"part\">Determines whether to generate a small area at the center, or the full Galaxy.</param> ",                    "accessModifier": "private",                    "functionName": "GenSectors"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "x",                        "Item2": "System.Int32",                        "Item3": null                      },                      {                        "Item1": "y",                        "Item2": "System.Int32",                        "Item3": null                      }                    ],                    "cleanParamList": [                      {                        "Item1": "int x,",                        "Item2": null                      },                      {                        "Item1": "int y",                        "Item2": null                      }                    ],                    "modifiers": [],                    "description": "<summary> Generates a single sector Object. </summary> <param name=\"x\">The x-coordinate of the sector.</param> <param name=\"y\">The y-coordinate of the sector.</param> <returns>The generated sector.</returns> ",                    "accessModifier": "private",                    "functionName": "GenSector"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "x",                        "Item2": "System.Int32",                        "Item3": null                      },                      {                        "Item1": "y",                        "Item2": "System.Int32",                        "Item3": null                      }                    ],                    "cleanParamList": [                      {                        "Item1": "int x,",                        "Item2": null                      },                      {                        "Item1": "int y",                        "Item2": null                      }                    ],                    "modifiers": [],                    "description": "<summary> Returns the sector at the corresponding  </summary> <param name=\"x\">The x-coordinate of the sector.</param> <param name=\"y\">The y-coordinate of the sector.</param> <returns>The sector at the given position.</returns> ",                    "accessModifier": "private",                    "functionName": "GetSector"                  }                ],                "public": [                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "<summary> Returns the ID of the galaxy object. </summary> <returns>The ID of the galaxy object.</returns> ",                    "accessModifier": "public",                    "functionName": "getID"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "<summary> Displays a myriad of info about the galaxy for debugging purposes. </summary> <returns>The string to be displayed.</returns> ",                    "accessModifier": "public",                    "functionName": "ToString"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_X"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "value",                        "Item2": "System.Int32",                        "Item3": null                      }                    ],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "set_X"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_Y"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "value",                        "Item2": "System.Int32",                        "Item3": null                      }                    ],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "set_Y"                  }                ]              }            }          },          {            "subDir": [],            "currentDirectory": "MapCoordinate.cs",            "filePaths": [              "\\MapCoordinate.cs"            ],            "prevDirectory": "C:\\Users\\queej\\Documents\\Coding\\Galanarius\\Assets\\Scripts\\Map",            "fileRepresentation": {              "imports": [                "System.Collections",                "System.Collections.Generic",                "UnityEngine"              ],              "variables": {                "private": [                  {                    "attributes": [                      "private",                      "int"                    ],                    "description": "The x (horizontal) coordinate. ",                    "accessMod": "private",                    "varName": "xCoord",                    "dirtyType": "System.Int32",                    "cleanType": "int"                  },                  {                    "attributes": [                      "private",                      "int"                    ],                    "description": "The y (vertical) coordinate. ",                    "accessMod": "private",                    "varName": "yCoord",                    "dirtyType": "System.Int32",                    "cleanType": "int"                  },                  {                    "attributes": [                      "private",                      "int"                    ],                    "description": "The d (dimensional) coordinate. ",                    "accessMod": "private",                    "varName": "dCoord",                    "dirtyType": "System.Int32",                    "cleanType": "int"                  }                ]              },              "inheritance": [                "NO INHERITANCE"              ],              "accessModifier": "public",              "className": "MapCoordinate",              "description": " <summary> Stores all the information about the coordinates of an object on the map (in all 3 dimensions), and methods to analyze and utilize this information. </summary>",              "filePath": "C:\\Users\\queej\\Documents\\Coding\\Galanarius\\Assets\\Scripts\\Map\\MapCoordinate.cs",              "nameSpace": "",              "declaration": "public class MapCoordinate",              "functions": {                "public": [                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_x"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "value",                        "Item2": "System.Int32",                        "Item3": null                      }                    ],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "set_x"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_y"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "value",                        "Item2": "System.Int32",                        "Item3": null                      }                    ],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "set_y"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_d"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "value",                        "Item2": "System.Int32",                        "Item3": null                      }                    ],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "set_d"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "coord1",                        "Item2": "MapCoordinate",                        "Item3": null                      },                      {                        "Item1": "coord2",                        "Item2": "MapCoordinate",                        "Item3": null                      }                    ],                    "cleanParamList": [                      {                        "Item1": "MapCoordinate coord1,",                        "Item2": null                      },                      {                        "Item1": "MapCoordinate coord2",                        "Item2": null                      }                    ],                    "modifiers": [                      "static"                    ],                    "description": "<summary> The distance between two map coordinates. </summary> <param name=\"coord1\">The first map coordinate object to compare.</param> <param name=\"coord2\">The second map coordinate object to compare.</param> <returns></returns> ",                    "accessModifier": "public",                    "functionName": "Distance"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "<summary> When treated as a string, the object will display its x and y coordinates. </summary> <returns>x, y</returns> ",                    "accessModifier": "public",                    "functionName": "ToString"                  }                ]              }            }          },          {            "subDir": [],            "currentDirectory": "MapInfoUpdate.cs",            "filePaths": [              "\\MapInfoUpdate.cs"            ],            "prevDirectory": "C:\\Users\\queej\\Documents\\Coding\\Galanarius\\Assets\\Scripts\\Map",            "fileRepresentation": {              "imports": [                "System.Collections",                "System.Collections.Generic",                "UnityEngine",                "TMPro"              ],              "variables": {                "private": [                  {                    "attributes": [                      "private",                      "ProfileManager"                    ],                    "description": "The player's profile. ",                    "accessMod": "private",                    "varName": "profile",                    "dirtyType": "ProfileManager",                    "cleanType": "ProfileManager"                  },                  {                    "attributes": [                      "private",                      "TMP_Text"                    ],                    "description": "The text representing the sector to be modified. ",                    "accessMod": "private",                    "varName": "sectorText",                    "dirtyType": "TMPro.TMP_Text",                    "cleanType": "TMP_Text"                  },                  {                    "attributes": [                      "private",                      "TMP_Text"                    ],                    "description": "The text representing whether the player is on a planet or not. ",                    "accessMod": "private",                    "varName": "planetText",                    "dirtyType": "TMPro.TMP_Text",                    "cleanType": "TMP_Text"                  },                  {                    "attributes": [                      "private",                      "TMP_Text"                    ],                    "description": "The text representing whether the player is on a planetoid or not. ",                    "accessMod": "private",                    "varName": "planetoidText",                    "dirtyType": "TMPro.TMP_Text",                    "cleanType": "TMP_Text"                  },                  {                    "attributes": [                      "private",                      "TMP_Text"                    ],                    "description": "The text representing the type of the body the player is at. ",                    "accessMod": "private",                    "varName": "typeText",                    "dirtyType": "TMPro.TMP_Text",                    "cleanType": "TMP_Text"                  }                ]              },              "inheritance": [                " MonoBehaviour"              ],              "accessModifier": "public",              "className": "MapInfoUpdate",              "description": " <summary> Updates the UI of the Logistics View (as seen without the Node View being full screen). </summary>",              "filePath": "C:\\Users\\queej\\Documents\\Coding\\Galanarius\\Assets\\Scripts\\Map\\MapInfoUpdate.cs",              "nameSpace": "",              "declaration": "public class MapInfoUpdate : MonoBehaviour",              "functions": {                "private": [                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "<summary> Runs at a fixed interval per second, updating the information on the display. </summary> ",                    "accessModifier": "private",                    "functionName": "FixedUpdate"                  }                ]              }            }          },          {            "subDir": [],            "currentDirectory": "MapManager.cs",            "filePaths": [              "\\MapManager.cs"            ],            "prevDirectory": "C:\\Users\\queej\\Documents\\Coding\\Galanarius\\Assets\\Scripts\\Map",            "fileRepresentation": {              "imports": [                "System.Collections",                "System.Collections.Generic",                "UnityEngine"              ],              "variables": {                "private": [                  {                    "attributes": [                      "private",                      "Galaxy"                    ],                    "description": "The data stored by the map ",                    "accessMod": "private",                    "varName": "map",                    "dirtyType": "Galaxy",                    "cleanType": "Galaxy"                  },                  {                    "attributes": [                      "private",                      "int"                    ],                    "description": "The x dimension of the galaxy. \\nEither set in game (default value only for now), or from the size of the loaded Galaxy. ",                    "accessMod": "private",                    "varName": "xSize",                    "dirtyType": "System.Int32",                    "cleanType": "int"                  },                  {                    "attributes": [                      "private",                      "int"                    ],                    "description": "The y dimension of the galaxy. \\nEither set in game (default value only for now), or from the size of the loaded Galaxy. ",                    "accessMod": "private",                    "varName": "ySize",                    "dirtyType": "System.Int32",                    "cleanType": "int"                  }                ]              },              "inheritance": [                " MonoBehaviour"              ],              "accessModifier": "public",              "className": "MapManager",              "description": " <summary> Stores the instance of the map (type Galaxy). \\nEither loads from a saved file if one exists, or generates a new one if one does not already. </summary>",              "filePath": "C:\\Users\\queej\\Documents\\Coding\\Galanarius\\Assets\\Scripts\\Map\\MapManager.cs",              "nameSpace": "",              "declaration": "public class MapManager : MonoBehaviour",              "functions": {                "private": [                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "<summary> Runs the first frame the component is enabled, both on object creation, and when re-enabled. \\nGenerates a new Galaxy, or loads the existing one. </summary> ",                    "accessModifier": "private",                    "functionName": "Awake"                  }                ],                "public": [                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "<summary> Saves the map in a persistent location. </summary> ",                    "accessModifier": "public",                    "functionName": "Save"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "<summary> Returns the map variable (type Galaxy). </summary> <returns>The map (type Galaxy).</returns> ",                    "accessModifier": "public",                    "functionName": "GetMap"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "m",                        "Item2": "Galaxy",                        "Item3": null                      }                    ],                    "cleanParamList": [                      {                        "Item1": "Galaxy m",                        "Item2": null                      }                    ],                    "modifiers": [],                    "description": "<summary> Sets the map to the given input. </summary> <param name=\"m\">The modified or new map.</param> ",                    "accessModifier": "public",                    "functionName": "SetMap"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "<summary> Deletes the saved map from its persistent location. </summary> ",                    "accessModifier": "public",                    "functionName": "Delete"                  }                ]              }            }          },          {            "subDir": [],            "currentDirectory": "Node.cs",            "filePaths": [              "\\Node.cs"            ],            "prevDirectory": "C:\\Users\\queej\\Documents\\Coding\\Galanarius\\Assets\\Scripts\\Map",            "fileRepresentation": {              "imports": [                "System.Collections",                "System.Collections.Generic",                "UnityEngine"              ],              "variables": {                "private": [                  {                    "attributes": [                      "private",                      "string"                    ],                    "description": "The ID of the galaxy containing the node. ",                    "accessMod": "private",                    "varName": "galaxyID",                    "dirtyType": "System.String",                    "cleanType": "string"                  },                  {                    "attributes": [                      "private",                      "int"                    ],                    "description": "The x coordinate of the sector containing the node. ",                    "accessMod": "private",                    "varName": "xCoord",                    "dirtyType": "System.Int32",                    "cleanType": "int"                  },                  {                    "attributes": [                      "private",                      "int"                    ],                    "description": "The y coordinate of the sector containing the node. ",                    "accessMod": "private",                    "varName": "yCoord",                    "dirtyType": "System.Int32",                    "cleanType": "int"                  },                  {                    "attributes": [                      "private",                      "int"                    ],                    "description": "The index of the body containg the node. ",                    "accessMod": "private",                    "varName": "index",                    "dirtyType": "System.Int32",                    "cleanType": "int"                  },                  {                    "attributes": [                      "private",                      "string"                    ],                    "description": "The type of the body containing the node. ",                    "accessMod": "private",                    "varName": "planetType",                    "dirtyType": "System.String",                    "cleanType": "string"                  },                  {                    "attributes": [                      "private",                      "int"                    ],                    "description": "The base multiplier of the node, determining the amount of resources it yields. ",                    "accessMod": "private",                    "varName": "nodeBase",                    "dirtyType": "System.Int32",                    "cleanType": "int"                  },                  {                    "attributes": [                      "private",                      "string"                    ],                    "description": "The type of the node, determining the resources it yields. ",                    "accessMod": "private",                    "varName": "nodeType",                    "dirtyType": "System.String",                    "cleanType": "string"                  },                  {                    "attributes": [                      "private",                      "NodeManager"                    ],                    "description": "A reference to the NodeManager ",                    "accessMod": "private",                    "varName": "manager",                    "dirtyType": "NodeManager",                    "cleanType": "NodeManager"                  }                ]              },              "inheritance": [                "NO INHERITANCE"              ],              "accessModifier": "public",              "className": "Node",              "description": " <summary> Stores all the information of the map at a single resource-node scope. </summary>",              "filePath": "C:\\Users\\queej\\Documents\\Coding\\Galanarius\\Assets\\Scripts\\Map\\Node.cs",              "nameSpace": "",              "declaration": "public class Node",              "functions": {                "private": [                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "<summary> Randomly selects the type of the node based on the type of the body that contains it. </summary> <returns>The selected type.</returns> ",                    "accessModifier": "private",                    "functionName": "GenType"                  }                ],                "public": [                  {                    "dirtyParamList": [                      {                        "Item1": "p",                        "Item2": "Profile",                        "Item3": null                      }                    ],                    "cleanParamList": [                      {                        "Item1": "Profile p",                        "Item2": null                      }                    ],                    "modifiers": [],                    "description": "<summary> Adds a random number of different resources based on the node type to the profile provided. </summary> <param name=\"p\">The profile to be modified.</param> ",                    "accessModifier": "public",                    "functionName": "GetResources"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "<summary> Returns the positional data of the Node. </summary> <returns>(x,y)[i]: body type: node type</returns> ",                    "accessModifier": "public",                    "functionName": "ToString"                  }                ]              }            }          },          {            "subDir": [],            "currentDirectory": "NodeManager.cs",            "filePaths": [              "\\NodeManager.cs"            ],            "prevDirectory": "C:\\Users\\queej\\Documents\\Coding\\Galanarius\\Assets\\Scripts\\Map",            "fileRepresentation": {              "imports": [                "System.Collections",                "System.Collections.Generic",                "UnityEngine"              ],              "variables": {                "private": [                  {                    "attributes": [                      "private",                      "NodeManagerData"                    ],                    "description": "All none-referential data defining the node on screen. ",                    "accessMod": "private",                    "varName": "data",                    "dirtyType": "NodeManagerData",                    "cleanType": "NodeManagerData"                  },                  {                    "attributes": [                      "private",                      "GameObject"                    ],                    "description": "A reference to the tile prefab. ",                    "accessMod": "private",                    "varName": "tile",                    "dirtyType": "UnityEngine.GameObject",                    "cleanType": "GameObject"                  },                  {                    "attributes": [                      "private",                      "bool"                    ],                    "description": "Determines whether or not the node as a whole is paused. \\nReferenced in other classes to determine whether certain methods should be called or not when their appropriate time would come. ",                    "accessMod": "private",                    "varName": "paused",                    "dirtyType": "System.Boolean",                    "cleanType": "bool"                  }                ]              },              "inheritance": [                " MonoBehaviour"              ],              "accessModifier": "public",              "className": "NodeManager",              "description": " <summary> The on screen representation of a node. </summary>",              "filePath": "C:\\Users\\queej\\Documents\\Coding\\Galanarius\\Assets\\Scripts\\Map\\NodeManager.cs",              "nameSpace": "",              "declaration": "public class NodeManager : MonoBehaviour",              "functions": {                "private": [                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "<summary> Called the first frame after the object is created. \\nCreates a new data object if one did not exist already. Sets up all necessary child objects and their components to accurately portray the node. </summary> ",                    "accessModifier": "private",                    "functionName": "Start"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "<summary> Called every frame, saving at the interval assigned in data. </summary> ",                    "accessModifier": "private",                    "functionName": "Update"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "<summary> The set up process if a data object is found for the node. \\nReads in and assigns all the data saved. </summary> ",                    "accessModifier": "private",                    "functionName": "Exists"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "<summary> The set up process if a data object is not found for the node. \\nCreates new empty versions of all the data. </summary> ",                    "accessModifier": "private",                    "functionName": "FillTiles"                  }                ],                "public": [                  {                    "dirtyParamList": [                      {                        "Item1": "x",                        "Item2": "System.Int32",                        "Item3": null                      },                      {                        "Item1": "y",                        "Item2": "System.Int32",                        "Item3": null                      }                    ],                    "cleanParamList": [                      {                        "Item1": "int x,",                        "Item2": null                      },                      {                        "Item1": "int y",                        "Item2": null                      }                    ],                    "modifiers": [],                    "description": "<summary> Returns the node tile at the specified index, or null if it does not exist. </summary> <param name=\"x\">The x coordinate of the tile.</param> <param name=\"y\">The y coordinate of the tile.</param> <returns>The tile found, or null.</returns> ",                    "accessModifier": "public",                    "functionName": "GetNodeTile"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_Data"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "value",                        "Item2": "NodeManagerData",                        "Item3": null                      }                    ],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "set_Data"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_NodeID"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "value",                        "Item2": "System.String",                        "Item3": null                      }                    ],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "set_NodeID"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_Size"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "value",                        "Item2": "System.Int32",                        "Item3": null                      }                    ],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "set_Size"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_Tiles"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_Paused"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "value",                        "Item2": "System.Boolean",                        "Item3": null                      }                    ],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "set_Paused"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "<summary> The textual representation of the node manager; its ID. </summary> <returns>The ID of the node.</returns> ",                    "accessModifier": "public",                    "functionName": "ToString"                  }                ]              }            }          },          {            "subDir": [],            "currentDirectory": "NodeManagerData.cs",            "filePaths": [              "\\NodeManagerData.cs"            ],            "prevDirectory": "C:\\Users\\queej\\Documents\\Coding\\Galanarius\\Assets\\Scripts\\Map",            "fileRepresentation": {              "imports": [                "System.Collections",                "System.Collections.Generic",                "UnityEngine"              ],              "variables": {                "private": [                  {                    "attributes": [                      "private",                      "string"                    ],                    "description": "The ID of the node to differentiate it from other nodes. ",                    "accessMod": "private",                    "varName": "nodeID",                    "dirtyType": "System.String",                    "cleanType": "string"                  },                  {                    "attributes": [                      "private",                      "int"                    ],                    "description": "The dimensions of the node (they're all squares). ",                    "accessMod": "private",                    "varName": "nodeSize",                    "dirtyType": "System.Int32",                    "cleanType": "int"                  },                  {                    "attributes": [                      "private",                      "NodeTileData[,]"                    ],                    "description": "Stores references to the individual tiles that make up the grid. ",                    "accessMod": "private",                    "varName": "tiles",                    "dirtyType": "NodeTileData[,]",                    "cleanType": "NodeTileData[,]"                  },                  {                    "attributes": [                      "private",                      "float"                    ],                    "description": "The time in between saving the node data. ",                    "accessMod": "private",                    "varName": "saveTime",                    "dirtyType": "System.Single",                    "cleanType": "float"                  },                  {                    "attributes": [                      "private",                      "float"                    ],                    "description": "The next time a save can occur. ",                    "accessMod": "private",                    "varName": "nextSaveTime",                    "dirtyType": "System.Single",                    "cleanType": "float"                  },                  {                    "attributes": [                      "private",                      "ResourceType[]"                    ],                    "description": "An array of resources to be selected from when a resource object is created by a gather. ",                    "accessMod": "private",                    "varName": "potentialResources",                    "dirtyType": "ResourceType[]",                    "cleanType": "ResourceType[]"                  }                ]              },              "inheritance": [                "NO INHERITANCE"              ],              "accessModifier": "public",              "className": "NodeManagerData",              "description": " <summary> Stores the serializable data that makes up the NodeManager class. </summary>",              "filePath": "C:\\Users\\queej\\Documents\\Coding\\Galanarius\\Assets\\Scripts\\Map\\NodeManagerData.cs",              "nameSpace": "",              "declaration": "public class NodeManagerData",              "functions": {                "private": [                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "private",                    "functionName": "SetResources"                  }                ],                "public": [                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_NodeID"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "value",                        "Item2": "System.String",                        "Item3": null                      }                    ],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "set_NodeID"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_NodeSize"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "value",                        "Item2": "System.Int32",                        "Item3": null                      }                    ],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "set_NodeSize"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_Tiles"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "value",                        "Item2": "NodeTileData[,]",                        "Item3": null                      }                    ],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "set_Tiles"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_SaveTime"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "value",                        "Item2": "System.Single",                        "Item3": null                      }                    ],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "set_SaveTime"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_NextSaveTime"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "value",                        "Item2": "System.Single",                        "Item3": null                      }                    ],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "set_NextSaveTime"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_Resource"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "ToString"                  }                ]              }            }          },          {            "subDir": [],            "currentDirectory": "NodeTile.cs",            "filePaths": [              "\\NodeTile.cs"            ],            "prevDirectory": "C:\\Users\\queej\\Documents\\Coding\\Galanarius\\Assets\\Scripts\\Map",            "fileRepresentation": {              "imports": [                "System.Collections",                "System.Collections.Generic",                "UnityEngine",                "UnityEngine.UI"              ],              "variables": {                "private": [                  {                    "attributes": [                      "private",                      "NodeTileData"                    ],                    "description": "The serializable data that defines the NodeTile. ",                    "accessMod": "private",                    "varName": "data",                    "dirtyType": "NodeTileData",                    "cleanType": "NodeTileData"                  },                  {                    "attributes": [                      "private",                      "bool"                    ],                    "description": "If the tile has been set up for the first time or not. ",                    "accessMod": "private",                    "varName": "setUp",                    "dirtyType": "System.Boolean",                    "cleanType": "bool"                  }                ]              },              "inheritance": [                " MonoBehaviour"              ],              "accessModifier": "public",              "className": "NodeTile",              "description": " <summary> The on screen representation of an individual tile of the node grid. </summary>",              "filePath": "C:\\Users\\queej\\Documents\\Coding\\Galanarius\\Assets\\Scripts\\Map\\NodeTile.cs",              "nameSpace": "",              "declaration": "public class NodeTile : MonoBehaviour",              "functions": {                "private": [                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "<summary> Sets up the tile if it was not loaded from a save file. </summary> ",                    "accessModifier": "private",                    "functionName": "Start"                  }                ],                "public": [                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "<summary> Fills out the fields of the serializable data of the NodeTile. </summary> ",                    "accessModifier": "public",                    "functionName": "SetUp"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "<summary> Updates the world position of the tile based off its size and coordinates in its data. </summary> ",                    "accessModifier": "public",                    "functionName": "UpdateLocation"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "<summary> Sets the current sprite to the empty sprite reference. </summary> ",                    "accessModifier": "public",                    "functionName": "SetSpriteEmpty"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "<summary> Sets the current sprite to the difficult sprite reference. </summary> ",                    "accessModifier": "public",                    "functionName": "SetSpriteDifficult"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "<summary> Sets the current sprite to the node sprite reference. </summary> ",                    "accessModifier": "public",                    "functionName": "SetSpriteNode"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "x",                        "Item2": "System.Int32",                        "Item3": null                      },                      {                        "Item1": "y",                        "Item2": "System.Int32",                        "Item3": null                      }                    ],                    "cleanParamList": [                      {                        "Item1": "int x,",                        "Item2": null                      },                      {                        "Item1": "int y",                        "Item2": null                      }                    ],                    "modifiers": [],                    "description": "<summary> Sets the coordinates of the NodeTile. </summary> <param name=\"x\">The new x-coord.</param> <param name=\"y\">The new y-coord.</param> ",                    "accessModifier": "public",                    "functionName": "SetCoords"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_Data"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "value",                        "Item2": "NodeTileData",                        "Item3": null                      }                    ],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "set_Data"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "<summary> Returns the data as a string. </summary> <returns>The data object.</returns> ",                    "accessModifier": "public",                    "functionName": "ToString"                  }                ]              }            }          },          {            "subDir": [],            "currentDirectory": "NodeTileData.cs",            "filePaths": [              "\\NodeTileData.cs"            ],            "prevDirectory": "C:\\Users\\queej\\Documents\\Coding\\Galanarius\\Assets\\Scripts\\Map",            "fileRepresentation": {              "imports": [                "System.Collections",                "System.Collections.Generic",                "UnityEngine",                "UnityEngine.UI"              ],              "variables": {                "private": [                  {                    "attributes": [                      "private",                      "Constants"                    ],                    "description": "A non-serialized field referencing the constants object in the scene. ",                    "accessMod": "private",                    "varName": "consts",                    "dirtyType": "Constants",                    "cleanType": "Constants"                  },                  {                    "attributes": [                      "private",                      "int"                    ],                    "description": "The previous xCoord value. ",                    "accessMod": "private",                    "varName": "lastX",                    "dirtyType": "System.Int32",                    "cleanType": "int"                  },                  {                    "attributes": [                      "private",                      "int"                    ],                    "description": "The x coordinate of the tile on the grid. ",                    "accessMod": "private",                    "varName": "xCoord",                    "dirtyType": "System.Int32",                    "cleanType": "int"                  },                  {                    "attributes": [                      "private",                      "int"                    ],                    "description": "The previous xCoord value. ",                    "accessMod": "private",                    "varName": "lastY",                    "dirtyType": "System.Int32",                    "cleanType": "int"                  },                  {                    "attributes": [                      "private",                      "int"                    ],                    "description": "The y coordinate of the tile on the grid. ",                    "accessMod": "private",                    "varName": "yCoord",                    "dirtyType": "System.Int32",                    "cleanType": "int"                  },                  {                    "attributes": [                      "private",                      "int"                    ],                    "description": "The size of the tile in the game space. ",                    "accessMod": "private",                    "varName": "size",                    "dirtyType": "System.Int32",                    "cleanType": "int"                  },                  {                    "attributes": [                      "private",                      "Image"                    ],                    "description": "A non-serialized field referencing the image the tile displays. ",                    "accessMod": "private",                    "varName": "image",                    "dirtyType": "UnityEngine.UI.Image",                    "cleanType": "Image"                  },                  {                    "attributes": [                      "private",                      "Sprite"                    ],                    "description": "A non-serialized field referencing the sprite of the image the tile displays. ",                    "accessMod": "private",                    "varName": "sprite",                    "dirtyType": "UnityEngine.Sprite",                    "cleanType": "Sprite"                  },                  {                    "attributes": [                      "private",                      "int"                    ],                    "description": "The integer representing the sprite displayed by the tile, to be serialized and read from for persistent display between sessions. ",                    "accessMod": "private",                    "varName": "spriteState",                    "dirtyType": "System.Int32",                    "cleanType": "int"                  }                ]              },              "inheritance": [                "NO INHERITANCE"              ],              "accessModifier": "public",              "className": "NodeTileData",              "description": " <summary> The object to be serialized representing a NodeTile. It is configured so that the non-serializable types will not be processed, and will instead be interpreted through other variables. </summary>",              "filePath": "C:\\Users\\queej\\Documents\\Coding\\Galanarius\\Assets\\Scripts\\Map\\NodeTileData.cs",              "nameSpace": "",              "declaration": "public class NodeTileData",              "functions": {                "public": [                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_X"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "value",                        "Item2": "System.Int32",                        "Item3": null                      }                    ],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "set_X"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_LastX"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_Y"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "value",                        "Item2": "System.Int32",                        "Item3": null                      }                    ],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "set_Y"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_LastY"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_Size"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "value",                        "Item2": "System.Int32",                        "Item3": null                      }                    ],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "set_Size"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_TileImage"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "value",                        "Item2": "UnityEngine.UI.Image",                        "Item3": null                      }                    ],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "set_TileImage"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_SpriteCurrent"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "value",                        "Item2": "UnityEngine.Sprite",                        "Item3": null                      }                    ],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "set_SpriteCurrent"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_SpriteState"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "value",                        "Item2": "System.Int32",                        "Item3": null                      }                    ],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "set_SpriteState"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_Consts"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "value",                        "Item2": "Constants",                        "Item3": null                      }                    ],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "set_Consts"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "<summary> Returns a string representing the coordinate of the tile on the grid. </summary> <returns>[x, y]</returns> ",                    "accessModifier": "public",                    "functionName": "ToString"                  }                ]              }            }          },          {            "subDir": [],            "currentDirectory": "Planet.cs",            "filePaths": [              "\\Planet.cs"            ],            "prevDirectory": "C:\\Users\\queej\\Documents\\Coding\\Galanarius\\Assets\\Scripts\\Map",            "fileRepresentation": {              "imports": [                "System.Collections",                "System.Collections.Generic",                "UnityEngine"              ],              "variables": {                "private": [                  {                    "attributes": [                      "private",                      "string"                    ],                    "description": "The ID of the containing galaxy. ",                    "accessMod": "private",                    "varName": "galaxyID",                    "dirtyType": "System.String",                    "cleanType": "string"                  },                  {                    "attributes": [                      "private",                      "int"                    ],                    "description": "The x coordinate of the containing sector. ",                    "accessMod": "private",                    "varName": "xCoord",                    "dirtyType": "System.Int32",                    "cleanType": "int"                  },                  {                    "attributes": [                      "private",                      "int"                    ],                    "description": "The y coordinate of the containing sector. ",                    "accessMod": "private",                    "varName": "yCoord",                    "dirtyType": "System.Int32",                    "cleanType": "int"                  },                  {                    "attributes": [                      "private",                      "int"                    ],                    "description": "The body index of this planet. ",                    "accessMod": "private",                    "varName": "index",                    "dirtyType": "System.Int32",                    "cleanType": "int"                  },                  {                    "attributes": [                      "private",                      "int"                    ],                    "description": "The integer size of the planet (used when determining the impact of events and/or the nodeBase). ",                    "accessMod": "private",                    "varName": "planetSize",                    "dirtyType": "System.Int32",                    "cleanType": "int"                  },                  {                    "attributes": [                      "private",                      "string"                    ],                    "description": "The type of the planet. ",                    "accessMod": "private",                    "varName": "planetType",                    "dirtyType": "System.String",                    "cleanType": "string"                  },                  {                    "attributes": [                      "private",                      "Planetoid[]"                    ],                    "description": "All the smaller scale planetoids surrounding the planet. ",                    "accessMod": "private",                    "varName": "planetoids",                    "dirtyType": "Planetoid[]",                    "cleanType": "Planetoid[]"                  },                  {                    "attributes": [                      "private",                      "int"                    ],                    "description": "The multiplier for all nodes on the planet, determining the number of resources they yield. ",                    "accessMod": "private",                    "varName": "nodeBase",                    "dirtyType": "System.Int32",                    "cleanType": "int"                  },                  {                    "attributes": [                      "private",                      "Node[]"                    ],                    "description": "All the smaller scale nodes on the planet. ",                    "accessMod": "private",                    "varName": "nodes",                    "dirtyType": "Node[]",                    "cleanType": "Node[]"                  }                ]              },              "inheritance": [                "NO INHERITANCE"              ],              "accessModifier": "public",              "className": "Planet",              "description": " <summary> Stores all the map information at a planetary scale. Can hold both nodes and planetoids. </summary>",              "filePath": "C:\\Users\\queej\\Documents\\Coding\\Galanarius\\Assets\\Scripts\\Map\\Planet.cs",              "nameSpace": "",              "declaration": "public class Planet",              "functions": {                "private": [                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "<summary> Randomly determines a size for the planet. </summary> <returns>The number representing the planet's size.</returns> ",                    "accessModifier": "private",                    "functionName": "GenSize"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "<summary> Randomly determines the type of the planet. </summary> <returns>The string representing the type of the planet.</returns> ",                    "accessModifier": "private",                    "functionName": "GenType"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "<summary> Randomly determines the number of planetoids to generate based off the size of the planet. \\nIt then creates an appropriately sized array, filling it with all the planetoids surrounding the planet. </summary> ",                    "accessModifier": "private",                    "functionName": "GenPlanetoids"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "<summary> Determines the nodeBase from the planet size. </summary> <returns></returns> ",                    "accessModifier": "private",                    "functionName": "GenNodeBase"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "<summary> Randomly deteremines the number of nodes based on the size of the planet. \\nIt then creates an appropriately sized array, and fills it with node ibjects. </summary> ",                    "accessModifier": "private",                    "functionName": "GenNodes"                  }                ],                "public": [                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "<summary> Returns a string displaying all the data of the planet. </summary> <returns>The data definining the planet object.</returns> ",                    "accessModifier": "public",                    "functionName": "ToString"                  }                ]              }            }          },          {            "subDir": [],            "currentDirectory": "Planetoid.cs",            "filePaths": [              "\\Planetoid.cs"            ],            "prevDirectory": "C:\\Users\\queej\\Documents\\Coding\\Galanarius\\Assets\\Scripts\\Map",            "fileRepresentation": {              "imports": [                "System.Collections",                "System.Collections.Generic",                "UnityEngine"              ],              "variables": {                "private": [                  {                    "attributes": [                      "private",                      "string"                    ],                    "description": "The ID of the containing galaxy. ",                    "accessMod": "private",                    "varName": "galaxyID",                    "dirtyType": "System.String",                    "cleanType": "string"                  },                  {                    "attributes": [                      "private",                      "int"                    ],                    "description": "The x coordinate of the containing sector. ",                    "accessMod": "private",                    "varName": "xCoord",                    "dirtyType": "System.Int32",                    "cleanType": "int"                  },                  {                    "attributes": [                      "private",                      "int"                    ],                    "description": "The y coordinate of the containing sector. ",                    "accessMod": "private",                    "varName": "yCoord",                    "dirtyType": "System.Int32",                    "cleanType": "int"                  },                  {                    "attributes": [                      "private",                      "int"                    ],                    "description": "The body index of this planetoid. ",                    "accessMod": "private",                    "varName": "index",                    "dirtyType": "System.Int32",                    "cleanType": "int"                  },                  {                    "attributes": [                      "private",                      "bool"                    ],                    "description": "Whether or not the scope above this planetoid is a planet or a sector. ",                    "accessMod": "private",                    "varName": "isPlanetChild",                    "dirtyType": "System.Boolean",                    "cleanType": "bool"                  },                  {                    "attributes": [                      "private",                      "int"                    ],                    "description": "The integer size of the planetoid (used when determining the impact of events and/or the nodeBase). ",                    "accessMod": "private",                    "varName": "planetoidSize",                    "dirtyType": "System.Int32",                    "cleanType": "int"                  },                  {                    "attributes": [                      "private",                      "string"                    ],                    "description": "The type of the planetoid. ",                    "accessMod": "private",                    "varName": "planetoidType",                    "dirtyType": "System.String",                    "cleanType": "string"                  },                  {                    "attributes": [                      "private",                      "int"                    ],                    "description": "The multiplier for all nodes on the planetoid, determining the number of resources they yield. ",                    "accessMod": "private",                    "varName": "nodeBase",                    "dirtyType": "System.Int32",                    "cleanType": "int"                  },                  {                    "attributes": [                      "private",                      "Node[]"                    ],                    "description": "All the smaller scale nodes on the planetoid. ",                    "accessMod": "private",                    "varName": "nodes",                    "dirtyType": "Node[]",                    "cleanType": "Node[]"                  }                ]              },              "inheritance": [                "NO INHERITANCE"              ],              "accessModifier": "public",              "className": "Planetoid",              "description": " <summary> Stores all the map information at a planetary scale. Can hold nodes. </summary>",              "filePath": "C:\\Users\\queej\\Documents\\Coding\\Galanarius\\Assets\\Scripts\\Map\\Planetoid.cs",              "nameSpace": "",              "declaration": "public class Planetoid",              "functions": {                "private": [                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "<summary> Randomly determines the size for the planetoid. </summary> <returns>The number representing the planetoid's size.</returns> ",                    "accessModifier": "private",                    "functionName": "GenPlanetoidSize"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "<summary> Randomly determines the type of the planet. </summary> <returns>The string representing the type of the planetoid.</returns> ",                    "accessModifier": "private",                    "functionName": "GenPlanetoidType"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "<summary> Determines the nodeBase from the planetoid size. </summary> <returns></returns> ",                    "accessModifier": "private",                    "functionName": "GenNodeBase"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "<summary> Randomly determines the number of nodes based on the size of the planetoid. \\nIt then creates an appropriately sized array, and fills it with node objects. </summary> ",                    "accessModifier": "private",                    "functionName": "GenNodes"                  }                ],                "public": [                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "<summary> Returns a string displaying all the data of the planetoid. </summary> <returns>The data defining the planet object.</returns> ",                    "accessModifier": "public",                    "functionName": "ToString"                  }                ]              }            }          },          {            "subDir": [],            "currentDirectory": "Sector.cs",            "filePaths": [              "\\Sector.cs"            ],            "prevDirectory": "C:\\Users\\queej\\Documents\\Coding\\Galanarius\\Assets\\Scripts\\Map",            "fileRepresentation": {              "imports": [                "System.Collections",                "System.Collections.Generic",                "UnityEngine"              ],              "variables": {                "private": [                  {                    "attributes": [                      "private",                      "string"                    ],                    "description": "The ID of the containing galaxy. ",                    "accessMod": "private",                    "varName": "galaxyID",                    "dirtyType": "System.String",                    "cleanType": "string"                  },                  {                    "attributes": [                      "private",                      "int"                    ],                    "description": "The x coordinate of this Sector object. ",                    "accessMod": "private",                    "varName": "xCoord",                    "dirtyType": "System.Int32",                    "cleanType": "int"                  },                  {                    "attributes": [                      "private",                      "int"                    ],                    "description": "The y coordinate of this Sector object. ",                    "accessMod": "private",                    "varName": "yCoord",                    "dirtyType": "System.Int32",                    "cleanType": "int"                  },                  {                    "attributes": [                      "private",                      "string"                    ],                    "description": "The classification of the star of the sector (determines number of planets/planetoids). ",                    "accessMod": "private",                    "varName": "classifiction",                    "dirtyType": "System.String",                    "cleanType": "string"                  },                  {                    "attributes": [                      "private",                      "Planet[]"                    ],                    "description": "All the planets and lower scales. ",                    "accessMod": "private",                    "varName": "planets",                    "dirtyType": "Planet[]",                    "cleanType": "Planet[]"                  },                  {                    "attributes": [                      "private",                      "Planetoid[]"                    ],                    "description": "All the planetoids and lower scales. ",                    "accessMod": "private",                    "varName": "planetoids",                    "dirtyType": "Planetoid[]",                    "cleanType": "Planetoid[]"                  }                ]              },              "inheritance": [                "NO INHERITANCE"              ],              "accessModifier": "public",              "className": "Sector",              "description": " <summary> Stores the data of a map at the scale of a sector and below. </summary>",              "filePath": "C:\\Users\\queej\\Documents\\Coding\\Galanarius\\Assets\\Scripts\\Map\\Sector.cs",              "nameSpace": "",              "declaration": "public class Sector",              "functions": {                "private": [                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "<summary> Randomly determines the classification of the sector. </summary> <returns></returns> ",                    "accessModifier": "private",                    "functionName": "GenClassif"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "<summary> Randomly determines the number of planets to generate based off the classification of the sector. \\nIt then creates an appropriately sized array, filling it with all the planets. </summary> ",                    "accessModifier": "private",                    "functionName": "GenPlanets"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "<summary> Randomly determines the number of planets to generate based off the classification of the sector. \\nIt then creates an appropriately sized array, filling it with all the planetoids. </summary> ",                    "accessModifier": "private",                    "functionName": "GenPlanetoids"                  }                ],                "public": [                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "<summary> Returns all the data in the sector as a string. </summary> <returns>The data defining the sector object.</returns> ",                    "accessModifier": "public",                    "functionName": "ToString"                  }                ]              }            }          }        ],        "currentDirectory": "Map",        "filePaths": [          "\\Map\\Galaxy.cs"        ],        "prevDirectory": "C:\\Users\\queej\\Documents\\Coding\\Galanarius\\Assets\\\\Scripts",        "fileRepresentation": null      },      {        "subDir": [          {            "subDir": [],            "currentDirectory": "Constants.cs",            "filePaths": [              "\\Constants.cs"            ],            "prevDirectory": "C:\\Users\\queej\\Documents\\Coding\\Galanarius\\Assets\\\\Scripts\\Misc",            "fileRepresentation": {              "imports": [                "System.Collections",                "System.Collections.Generic",                "UnityEngine"              ],              "variables": {                "private": [                  {                    "attributes": [                      "private",                      "Sprite"                    ],                    "description": "The sprite for an empty grid tile ",                    "accessMod": "private",                    "varName": "spriteEmpty",                    "dirtyType": "UnityEngine.Sprite",                    "cleanType": "Sprite"                  },                  {                    "attributes": [                      "private",                      "Sprite"                    ],                    "description": "The sprite for a difficult grid tile ",                    "accessMod": "private",                    "varName": "spriteDifficult",                    "dirtyType": "UnityEngine.Sprite",                    "cleanType": "Sprite"                  },                  {                    "attributes": [                      "private",                      "Sprite"                    ],                    "description": "The sprite for a node grid tile ",                    "accessMod": "private",                    "varName": "spriteNode",                    "dirtyType": "UnityEngine.Sprite",                    "cleanType": "Sprite"                  }                ]              },              "inheritance": [                " MonoBehaviour"              ],              "accessModifier": "public",              "className": "Constants",              "description": " <summary> A component included on the constants prefab GameObject. \\nDetails a number of resources needing to be referenced (as an alternative to using Resource.Load()) </summary>",              "filePath": "C:\\Users\\queej\\Documents\\Coding\\Galanarius\\Assets\\\\Scripts\\Misc\\Constants.cs",              "nameSpace": "",              "declaration": "public class Constants : MonoBehaviour",              "functions": {                "public": [                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_SpriteEmpty"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_SpriteDifficult"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_SpriteNode"                  }                ]              }            }          },          {            "subDir": [],            "currentDirectory": "LevelLoader.cs",            "filePaths": [              "\\LevelLoader.cs"            ],            "prevDirectory": "C:\\Users\\queej\\Documents\\Coding\\Galanarius\\Assets\\Scripts\\Misc",            "fileRepresentation": {              "imports": [                "System.Collections",                "System.Collections.Generic",                "UnityEngine",                "UnityEngine.SceneManagement"              ],              "variables": {                "private": [                  {                    "attributes": [                      "private",                      "Animator"                    ],                    "description": "The animation to play to transition between scenes. ",                    "accessMod": "private",                    "varName": "transition",                    "dirtyType": "UnityEngine.Animator",                    "cleanType": "Animator"                  },                  {                    "attributes": [                      "private",                      "float"                    ],                    "description": "The time to pause between the start of the animation and the end of the animation when transitioning scenes. ",                    "accessMod": "private",                    "varName": "transitionTime",                    "dirtyType": "System.Single",                    "cleanType": "float"                  },                  {                    "attributes": [                      "private",                      "int"                    ],                    "description": "The build index of the last scene (for use by the back button). ",                    "accessMod": "private",                    "varName": "lastLevelIndex",                    "dirtyType": "System.Int32",                    "cleanType": "int"                  }                ]              },              "inheritance": [                " MonoBehaviour"              ],              "accessModifier": "public",              "className": "LevelLoader",              "description": " <summary> A component allowing for scene management, such as loading and unloading scenes, and exiting the program. </summary>",              "filePath": "C:\\Users\\queej\\Documents\\Coding\\Galanarius\\Assets\\Scripts\\Misc\\LevelLoader.cs",              "nameSpace": "",              "declaration": "public class LevelLoader : MonoBehaviour",              "functions": {                "public": [                  {                    "dirtyParamList": [                      {                        "Item1": "buildIndex",                        "Item2": "System.Int32",                        "Item3": null                      }                    ],                    "cleanParamList": [                      {                        "Item1": "int buildIndex",                        "Item2": null                      }                    ],                    "modifiers": [],                    "description": "<summary> Sets the lastLevelIndex to the current scene index and starts a coroutine to load the new scene and unload the current one. </summary> <param name=\"buildIndex\">The build index of the scene to transition to.</param> ",                    "accessModifier": "public",                    "functionName": "LoadNextLevel"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "<summary> Loads the scene at lastLevelIndex, and sets the lastLevelIndex to the current scene index. </summary> ",                    "accessModifier": "public",                    "functionName": "LoadLastLevel"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "<summary> Closes the application. </summary> ",                    "accessModifier": "public",                    "functionName": "DoExitGame"                  }                ],                "private": [                  {                    "dirtyParamList": [                      {                        "Item1": "buildIndex",                        "Item2": "System.Int32",                        "Item3": null                      }                    ],                    "cleanParamList": [                      {                        "Item1": "int buildIndex",                        "Item2": null                      }                    ],                    "modifiers": [],                    "description": "<summary> Runs in a coroutine to load the next level and unload the last level. </summary> <param name=\"buildIndex\">The build index of the scene to transition to.</param> <returns>An enumerator directing the coroutine to wait for a number of seconds equal to transitionTime.</returns> ",                    "accessModifier": "private",                    "functionName": "LoadLevel"                  }                ]              }            }          },          {            "subDir": [],            "currentDirectory": "LogisticsViewChange.cs",            "filePaths": [              "\\LogisticsViewChange.cs"            ],            "prevDirectory": "C:\\Users\\queej\\Documents\\Coding\\Galanarius\\Assets\\Scripts\\Misc",            "fileRepresentation": {              "imports": [                "System.Collections",                "System.Collections.Generic",                "UnityEngine",                "UnityEngine.UI",                "UnityEngine.Events"              ],              "variables": {                "private": [                  {                    "attributes": [                      "private",                      "GameObject"                    ],                    "description": "The largest that UI elements should be (should be set to the Canvas GameObject). ",                    "accessMod": "private",                    "varName": "boundingBox",                    "dirtyType": "UnityEngine.GameObject",                    "cleanType": "GameObject"                  },                  {                    "attributes": [                      "private",                      "GameObject"                    ],                    "description": "The RawImage displaying the camera preview showing the node grid. ",                    "accessMod": "private",                    "varName": "nodeView",                    "dirtyType": "UnityEngine.GameObject",                    "cleanType": "GameObject"                  },                  {                    "attributes": [                      "private",                      "GameObject"                    ],                    "description": "The GameObject with the LevelLoader component. ",                    "accessMod": "private",                    "varName": "loader",                    "dirtyType": "UnityEngine.GameObject",                    "cleanType": "GameObject"                  },                  {                    "attributes": [                      "private",                      "GameObject"                    ],                    "description": "The GameObject storing all UI elements related to the inentory. ",                    "accessMod": "private",                    "varName": "inventory",                    "dirtyType": "UnityEngine.GameObject",                    "cleanType": "GameObject"                  },                  {                    "attributes": [                      "private",                      "Button"                    ],                    "description": "The button which sets the nodeView to fullscreen. ",                    "accessMod": "private",                    "varName": "button",                    "dirtyType": "UnityEngine.UI.Button",                    "cleanType": "Button"                  },                  {                    "attributes": [                      "private",                      "Button"                    ],                    "description": "The back button, which resizes the nodeView when in fullscreen, and moves to the previous scene otherwise. ",                    "accessMod": "private",                    "varName": "backButton",                    "dirtyType": "UnityEngine.UI.Button",                    "cleanType": "Button"                  },                  {                    "attributes": [                      "private",                      "UnityAction"                    ],                    "description": "The buttonPress event of the backButton. ",                    "accessMod": "private",                    "varName": "action",                    "dirtyType": "UnityEngine.Events.UnityAction",                    "cleanType": "UnityAction"                  },                  {                    "attributes": [                      "public",                      "static",                      "event",                      "Filled"                    ],                    "description": "The Filled instance other classes add to. ",                    "accessMod": "private",                    "varName": "OnFilled",                    "dirtyType": "LogisticsViewChange+Filled",                    "cleanType": "Filled"                  },                  {                    "attributes": [                      "private",                      "bool"                    ],                    "description": "Whether or not the nodeView is fullScreen. ",                    "accessMod": "private",                    "varName": "_full",                    "dirtyType": "System.Boolean",                    "cleanType": "bool"                  },                  {                    "attributes": [                      "private",                      "Vector2"                    ],                    "description": "The anchorMin of the small size of nodeView. ",                    "accessMod": "private",                    "varName": "anchorMin",                    "dirtyType": "UnityEngine.Vector2",                    "cleanType": "Vector2"                  },                  {                    "attributes": [                      "private",                      "Vector2"                    ],                    "description": "The anchorMax of the small size of nodeView. ",                    "accessMod": "private",                    "varName": "anchorMax",                    "dirtyType": "UnityEngine.Vector2",                    "cleanType": "Vector2"                  },                  {                    "attributes": [                      "private",                      "Vector2"                    ],                    "description": "The sizeDelta of the small size of nodeView. ",                    "accessMod": "private",                    "varName": "sizeDelta",                    "dirtyType": "UnityEngine.Vector2",                    "cleanType": "Vector2"                  }                ]              },              "inheritance": [                " MonoBehaviour"              ],              "accessModifier": "public",              "className": "LogisticsViewChange",              "description": " <summary> A component which manages the UI of the Logistics Menu </summary>",              "filePath": "C:\\Users\\queej\\Documents\\Coding\\Galanarius\\Assets\\Scripts\\Misc\\LogisticsViewChange.cs",              "nameSpace": "",              "declaration": "public class LogisticsViewChange : MonoBehaviour",              "functions": {                "public": [                  {                    "dirtyParamList": [                      {                        "Item1": "value",                        "Item2": "LogisticsViewChange+Filled",                        "Item3": null                      }                    ],                    "cleanParamList": [],                    "modifiers": [                      "static"                    ],                    "description": "",                    "accessModifier": "public",                    "functionName": "add_OnFilled"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "value",                        "Item2": "LogisticsViewChange+Filled",                        "Item3": null                      }                    ],                    "cleanParamList": [],                    "modifiers": [                      "static"                    ],                    "description": "",                    "accessModifier": "public",                    "functionName": "remove_OnFilled"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_full"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_inventoryFull"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "<summary> Sets the nodeView to fullscreen, and modifies the backButton to switch the view back to the small view. </summary> ",                    "accessModifier": "public",                    "functionName": "SetFull"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "<summary> Sets the nodeView to the small view, and modifies the backButton to move to the previous scene. </summary> ",                    "accessModifier": "public",                    "functionName": "SetStart"                  }                ],                "private": [                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "<summary> Called on the first frame after creation, setting all the small sized references for the nodeView, and setting the back button events. </summary> ",                    "accessModifier": "private",                    "functionName": "Start"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "<summary> Runs every frame. Checks for key inputs, and activates or deactivates different UI elements accordingly. </summary> ",                    "accessModifier": "private",                    "functionName": "Update"                  }                ]              }            }          },          {            "subDir": [],            "currentDirectory": "SaveSystem.cs",            "filePaths": [              "\\SaveSystem.cs"            ],            "prevDirectory": "C:\\Users\\queej\\Documents\\Coding\\Galanarius\\Assets\\Scripts\\Misc",            "fileRepresentation": {              "imports": [                "UnityEngine",                "System.IO",                "System.Runtime.Serialization.Formatters.Binary"              ],              "variables": {                "private": [                  {                    "attributes": [                      "static",                      "string"                    ],                    "description": "The file path to save the profile to. ",                    "accessMod": "private",                    "varName": "pathProfile",                    "dirtyType": "System.String",                    "cleanType": "string"                  },                  {                    "attributes": [                      "static",                      "string"                    ],                    "description": "The file path to save the map to. ",                    "accessMod": "private",                    "varName": "pathMap",                    "dirtyType": "System.String",                    "cleanType": "string"                  },                  {                    "attributes": [                      "static",                      "string"                    ],                    "description": "The beginning of the file path to save nodes to. ",                    "accessMod": "private",                    "varName": "pathNodes",                    "dirtyType": "System.String",                    "cleanType": "string"                  }                ]              },              "inheritance": [                "NO INHERITANCE"              ],              "accessModifier": "publicstatic",              "className": "SaveSystem",              "description": " <summary> A static class to handle the serialization and deserialization of data in and out of file streams for persistence. </summary>",              "filePath": "C:\\Users\\queej\\Documents\\Coding\\Galanarius\\Assets\\Scripts\\Misc\\SaveSystem.cs",              "nameSpace": "",              "declaration": "public static class SaveSystem",              "functions": {                "public": [                  {                    "dirtyParamList": [                      {                        "Item1": "profile",                        "Item2": "Profile",                        "Item3": null                      }                    ],                    "cleanParamList": [                      {                        "Item1": "Profile profile",                        "Item2": null                      }                    ],                    "modifiers": [                      "static"                    ],                    "description": "<summary> Saves the profile parameter. Overwrites the existing profile save if one exists. </summary> <param name=\"profile\">The profile to save.</param> ",                    "accessModifier": "public",                    "functionName": "SaveProfile"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "map",                        "Item2": "Galaxy",                        "Item3": null                      }                    ],                    "cleanParamList": [                      {                        "Item1": "Galaxy map",                        "Item2": null                      }                    ],                    "modifiers": [                      "static"                    ],                    "description": "<summary> Saves the map parameter. Overwrites the existing map save if one exists. </summary> <param name=\"map\">The map to save.</param> ",                    "accessModifier": "public",                    "functionName": "SaveMap"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "node",                        "Item2": "NodeManagerData",                        "Item3": null                      }                    ],                    "cleanParamList": [                      {                        "Item1": "NodeManagerData node",                        "Item2": null                      }                    ],                    "modifiers": [                      "static"                    ],                    "description": "<summary> Saves the node parameter. Overwrites the exisiting node if one exists. </summary> <param name=\"node\">The node to save.</param> ",                    "accessModifier": "public",                    "functionName": "SaveNode"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [                      "static"                    ],                    "description": "<summary> Checks if a profile save file exists. </summary> <returns>Whether or not the profile exists.</returns> ",                    "accessModifier": "public",                    "functionName": "ExistsProfile"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [                      "static"                    ],                    "description": "<summary> Checks if a map save file exists. </summary> <returns>Whether or not the map exists.</returns> ",                    "accessModifier": "public",                    "functionName": "ExistsMap"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "node",                        "Item2": "NodeManagerData",                        "Item3": null                      }                    ],                    "cleanParamList": [                      {                        "Item1": "NodeManagerData node",                        "Item2": null                      }                    ],                    "modifiers": [                      "static"                    ],                    "description": "<summary> Checks if a node save file exists. </summary> <param name=\"node\">The node to check if it exists.</param> <returns>Whether or not the node passed in exists.</returns> ",                    "accessModifier": "public",                    "functionName": "ExistsNode"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [                      "static"                    ],                    "description": "<summary> Loads the profile from the save file. </summary> <returns>The loaded Profile object.</returns> ",                    "accessModifier": "public",                    "functionName": "LoadProfile"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [                      "static"                    ],                    "description": "<summary> Loads the map from the save file. </summary> <returns>The loaded Galaxy object.</returns> ",                    "accessModifier": "public",                    "functionName": "LoadMap"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "node",                        "Item2": "NodeManagerData",                        "Item3": null                      }                    ],                    "cleanParamList": [                      {                        "Item1": "NodeManagerData node",                        "Item2": null                      }                    ],                    "modifiers": [                      "static"                    ],                    "description": "<summary> Loads the node from the save file. </summary> <param name=\"node\">The node to load</param> <returns>The loaded NodeManagerData object.</returns> ",                    "accessModifier": "public",                    "functionName": "LoadNode"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [                      "static"                    ],                    "description": "<summary> Deletes the profile save. </summary> ",                    "accessModifier": "public",                    "functionName": "DeleteProfile"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [                      "static"                    ],                    "description": "<summary> Deletes the map save. </summary> ",                    "accessModifier": "public",                    "functionName": "DeleteMap"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "node",                        "Item2": "NodeManagerData",                        "Item3": null                      }                    ],                    "cleanParamList": [                      {                        "Item1": "NodeManagerData node",                        "Item2": null                      }                    ],                    "modifiers": [                      "static"                    ],                    "description": "<summary> Deletes the save of the given node. </summary> <param name=\"node\">The node to delete.</param> ",                    "accessModifier": "public",                    "functionName": "DeleteNode"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "original",                        "Item2": "T",                        "Item3": null                      },                      {                        "Item1": "destination",                        "Item2": "UnityEngine.GameObject",                        "Item3": null                      }                    ],                    "cleanParamList": [                      {                        "Item1": "T original,",                        "Item2": null                      },                      {                        "Item1": "GameObject destination",                        "Item2": null                      }                    ],                    "modifiers": [                      "static"                    ],                    "description": "<summary> Copies a given Component to a given GameObject. </summary> <typeparam name=\"T\">The type of the Component.</typeparam> <param name=\"original\">The original Component.</param> <param name=\"destination\">The GameObject to copy the Component onto.</param> <returns>A reference to the copy of the given Component.</returns> ",                    "accessModifier": "public",                    "functionName": "CopyComponent"                  }                ]              }            }          },          {            "subDir": [],            "currentDirectory": "TestingDisplay.cs",            "filePaths": [              "\\TestingDisplay.cs"            ],            "prevDirectory": "C:\\Users\\queej\\Documents\\Coding\\Galanarius\\Assets\\Scripts\\Misc",            "fileRepresentation": {              "imports": [                "System.Collections",                "System.Collections.Generic",                "UnityEngine",                "TMPro"              ],              "variables": {                "private": [                  {                    "attributes": [                      "private",                      "TMP_Text"                    ],                    "description": "A reference to the text to update to display the test information. ",                    "accessMod": "private",                    "varName": "text",                    "dirtyType": "TMPro.TMP_Text",                    "cleanType": "TMP_Text"                  },                  {                    "attributes": [                      "Sector"                    ],                    "description": "What object is being tested. ",                    "accessMod": "private",                    "varName": "sector",                    "dirtyType": "Sector",                    "cleanType": "Sector"                  },                  {                    "attributes": [                      "private",                      "string"                    ],                    "description": "What is displayed as a result on screen. ",                    "accessMod": "private",                    "varName": "result",                    "dirtyType": "System.String",                    "cleanType": "string"                  }                ]              },              "inheritance": [                " MonoBehaviour"              ],              "accessModifier": "public",              "className": "TestingDisplay",              "description": " <summary> For use in a test scene to ensure that back end items perform correctly. </summary>",              "filePath": "C:\\Users\\queej\\Documents\\Coding\\Galanarius\\Assets\\Scripts\\Misc\\TestingDisplay.cs",              "nameSpace": "",              "declaration": "public class TestingDisplay : MonoBehaviour",              "functions": {                "private": [                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "<summary> Runs the first frame to set up the test, constructing necessary objects, calling necessary methods, then calling display to update the text. </summary> ",                    "accessModifier": "private",                    "functionName": "Start"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "<summary> Updates the result string, logs the result in the console, and updates the Text Mesh Pro object to show it. </summary> ",                    "accessModifier": "private",                    "functionName": "Display"                  }                ]              }            }          }        ],        "currentDirectory": "Misc",        "filePaths": [          "\\Misc\\Constants.cs"        ],        "prevDirectory": "C:\\Users\\queej\\Documents\\Coding\\Galanarius\\Assets\\\\Scripts",        "fileRepresentation": null      },      {        "subDir": [          {            "subDir": [],            "currentDirectory": "BuildingItem.cs",            "filePaths": [              "\\BuildingItem.cs"            ],            "prevDirectory": "C:\\Users\\queej\\Documents\\Coding\\Galanarius\\Assets\\\\Scripts\\Profile",            "fileRepresentation": {              "imports": [                "System.Collections",                "System.Collections.Generic",                "UnityEngine",                "UnityEngine.UI"              ],              "variables": {                "private": [                  {                    "attributes": [                      "private",                      "BuildingType"                    ],                    "description": "The type of the building. ",                    "accessMod": "private",                    "varName": "_buildingType",                    "dirtyType": "Buildings.BuildingType",                    "cleanType": "BuildingType"                  },                  {                    "attributes": [                      "private",                      "int"                    ],                    "description": "How many of that building there are in the space (inventory, loot-inventory, building-inventory, etc) ",                    "accessMod": "private",                    "varName": "_amount",                    "dirtyType": "System.Int32",                    "cleanType": "int"                  },                  {                    "attributes": [                      "private",                      "PlacingSet"                    ],                    "description": "The instance of the PlacingSet delegate used internally in BuildingItem. ",                    "accessMod": "private",                    "varName": "_placingSet",                    "dirtyType": "Buildings.BuildingItem+PlacingSet",                    "cleanType": "PlacingSet"                  },                  {                    "attributes": [                      "private",                      "Image"                    ],                    "description": "The Image that is displayed to represent the building on the UI. ",                    "accessMod": "private",                    "varName": "image",                    "dirtyType": "UnityEngine.UI.Image",                    "cleanType": "Image"                  },                  {                    "attributes": [                      "private",                      "Button"                    ],                    "description": "The button that records interaction with the BuildingItem ",                    "accessMod": "private",                    "varName": "button",                    "dirtyType": "UnityEngine.UI.Button",                    "cleanType": "Button"                  }                ]              },              "inheritance": [                " MonoBehaviour"              ],              "accessModifier": "public",              "className": "BuildingItem",              "description": " <summary> The UI representation of a building (i.e. for selection in the inventory) </summary>",              "filePath": "C:\\Users\\queej\\Documents\\Coding\\Galanarius\\Assets\\\\Scripts\\Profile\\BuildingItem.cs",              "nameSpace": "Buildings",              "declaration": "public class BuildingItem : MonoBehaviour",              "functions": {                "private": [                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "<summary> Runs on the first frame after the component is activated for the first time. </summary> ",                    "accessModifier": "private",                    "functionName": "Start"                  }                ],                "public": [                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "<summary> Called when the button is clicked. \\nCalls the placingSet(PlacingSystem p) delegate, passing in the placing system on the profile GameObject. </summary> ",                    "accessModifier": "public",                    "functionName": "Click"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_buildingType"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "value",                        "Item2": "Buildings.BuildingType",                        "Item3": null                      }                    ],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "set_buildingType"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_amount"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "value",                        "Item2": "System.Int32",                        "Item3": null                      }                    ],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "set_amount"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_placingSet"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "value",                        "Item2": "Buildings.BuildingItem+PlacingSet",                        "Item3": null                      }                    ],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "set_placingSet"                  }                ]              }            }          },          {            "subDir": [],            "currentDirectory": "InventoryManager.cs",            "filePaths": [              "\\InventoryManager.cs"            ],            "prevDirectory": "C:\\Users\\queej\\Documents\\Coding\\Galanarius\\Assets\\Scripts\\Profile",            "fileRepresentation": {              "imports": [                "System.Collections",                "System.Collections.Generic",                "UnityEngine",                "TMPro"              ],              "variables": {                "private": [                  {                    "attributes": [                      "private",                      "GameObject"                    ],                    "description": "Reference to the GameObject holding the profile ",                    "accessMod": "private",                    "varName": "profile",                    "dirtyType": "UnityEngine.GameObject",                    "cleanType": "GameObject"                  },                  {                    "attributes": [                      "private",                      "GameObject"                    ],                    "description": "Reference to the UI Object which contains all the inventory items related to resources. ",                    "accessMod": "private",                    "varName": "resourcesObject",                    "dirtyType": "UnityEngine.GameObject",                    "cleanType": "GameObject"                  },                  {                    "attributes": [                      "private",                      "GameObject"                    ],                    "description": "Reference to the UI Object which contains all the inventory items related to buildings. ",                    "accessMod": "private",                    "varName": "buildingsObject",                    "dirtyType": "UnityEngine.GameObject",                    "cleanType": "GameObject"                  },                  {                    "attributes": [                      "private",                      "GameObject"                    ],                    "description": "Reference to the UI Object which contains all the inventory items related to resources. ",                    "accessMod": "private",                    "varName": "resources",                    "dirtyType": "ResourceManager",                    "cleanType": "GameObject"                  },                  {                    "attributes": [                      "private",                      "TMP_Text"                    ],                    "description": "A reference to the UI text displaying the amount of the personnel resource in the inventory. ",                    "accessMod": "private",                    "varName": "personnel",                    "dirtyType": "TMPro.TMP_Text",                    "cleanType": "TMP_Text"                  },                  {                    "attributes": [                      "private",                      "TMP_Text"                    ],                    "description": "A reference to the UI text displaying the amount of the helium1 resource type in the inventory. ",                    "accessMod": "private",                    "varName": "helium1",                    "dirtyType": "TMPro.TMP_Text",                    "cleanType": "TMP_Text"                  },                  {                    "attributes": [                      "private",                      "TMP_Text"                    ],                    "description": "A reference to the UI text displaying the amount of the helium2 resource type in the inventory. ",                    "accessMod": "private",                    "varName": "helium2",                    "dirtyType": "TMPro.TMP_Text",                    "cleanType": "TMP_Text"                  },                  {                    "attributes": [                      "private",                      "TMP_Text"                    ],                    "description": "A reference to the UI text displaying the amount of the helium3 resource type in the inventory. ",                    "accessMod": "private",                    "varName": "helium3",                    "dirtyType": "TMPro.TMP_Text",                    "cleanType": "TMP_Text"                  },                  {                    "attributes": [                      "private",                      "TMP_Text"                    ],                    "description": "A reference to the UI text displaying the amount of the hydrogen resource type in the inventory. ",                    "accessMod": "private",                    "varName": "hydrogen",                    "dirtyType": "TMPro.TMP_Text",                    "cleanType": "TMP_Text"                  },                  {                    "attributes": [                      "private",                      "TMP_Text"                    ],                    "description": "A reference to the UI text displaying the amount of the oil resource type in the inventory. ",                    "accessMod": "private",                    "varName": "oil",                    "dirtyType": "TMPro.TMP_Text",                    "cleanType": "TMP_Text"                  },                  {                    "attributes": [                      "private",                      "TMP_Text"                    ],                    "description": "A reference to the UI text displaying the amount of the ftl fuel resource type in the inventory. ",                    "accessMod": "private",                    "varName": "ftlFuel",                    "dirtyType": "TMPro.TMP_Text",                    "cleanType": "TMP_Text"                  },                  {                    "attributes": [                      "private",                      "TMP_Text"                    ],                    "description": "A reference to the UI text displaying the amount of the sublight fuel resource type in the inventory. ",                    "accessMod": "private",                    "varName": "sublightFuel",                    "dirtyType": "TMPro.TMP_Text",                    "cleanType": "TMP_Text"                  },                  {                    "attributes": [                      "private",                      "TMP_Text"                    ],                    "description": "A reference to the UI text displaying the amount of the natural material resource type in the inventory. ",                    "accessMod": "private",                    "varName": "natMat",                    "dirtyType": "TMPro.TMP_Text",                    "cleanType": "TMP_Text"                  },                  {                    "attributes": [                      "private",                      "TMP_Text"                    ],                    "description": "A reference to the UI text displaying the amount of the terran material resource type in the inventory. ",                    "accessMod": "private",                    "varName": "terraMat",                    "dirtyType": "TMPro.TMP_Text",                    "cleanType": "TMP_Text"                  },                  {                    "attributes": [                      "private",                      "TMP_Text"                    ],                    "description": "A reference to the UI text displaying the amount of the seed resource type in the inventory. ",                    "accessMod": "private",                    "varName": "seed",                    "dirtyType": "TMPro.TMP_Text",                    "cleanType": "TMP_Text"                  },                  {                    "attributes": [                      "private",                      "TMP_Text"                    ],                    "description": "A reference to the UI text displaying the amount of the crop resource type in the inventory. ",                    "accessMod": "private",                    "varName": "crop",                    "dirtyType": "TMPro.TMP_Text",                    "cleanType": "TMP_Text"                  },                  {                    "attributes": [                      "private",                      "TMP_Text"                    ],                    "description": "A reference to the UI text displaying the amount of the food resource type in the inventory. ",                    "accessMod": "private",                    "varName": "food",                    "dirtyType": "TMPro.TMP_Text",                    "cleanType": "TMP_Text"                  },                  {                    "attributes": [                      "private",                      "TMP_Text"                    ],                    "description": "A reference to the UI text displaying the amount of the synthetic1 resource type in the inventory. ",                    "accessMod": "private",                    "varName": "synth1",                    "dirtyType": "TMPro.TMP_Text",                    "cleanType": "TMP_Text"                  },                  {                    "attributes": [                      "private",                      "TMP_Text"                    ],                    "description": "A reference to the UI text displaying the amount of the synthetic2 resource type in the inventory. ",                    "accessMod": "private",                    "varName": "synth2",                    "dirtyType": "TMPro.TMP_Text",                    "cleanType": "TMP_Text"                  },                  {                    "attributes": [                      "private",                      "TMP_Text"                    ],                    "description": "A reference to the UI text displaying the amount of the synthetic3 resource type in the inventory. ",                    "accessMod": "private",                    "varName": "synth3",                    "dirtyType": "TMPro.TMP_Text",                    "cleanType": "TMP_Text"                  },                  {                    "attributes": [                      "private",                      "TMP_Text"                    ],                    "description": "A reference to the UI text displaying the amount of the synthetic4 resource type in the inventory. ",                    "accessMod": "private",                    "varName": "synth4",                    "dirtyType": "TMPro.TMP_Text",                    "cleanType": "TMP_Text"                  },                  {                    "attributes": [                      "private",                      "TMP_Text"                    ],                    "description": "A reference to the UI text displaying the amount of the stone resource type in the inventory. ",                    "accessMod": "private",                    "varName": "stone",                    "dirtyType": "TMPro.TMP_Text",                    "cleanType": "TMP_Text"                  },                  {                    "attributes": [                      "private",                      "TMP_Text"                    ],                    "description": "A reference to the UI text displaying the amount of the slag resource type in the inventory. ",                    "accessMod": "private",                    "varName": "slag",                    "dirtyType": "TMPro.TMP_Text",                    "cleanType": "TMP_Text"                  },                  {                    "attributes": [                      "private",                      "TMP_Text"                    ],                    "description": "A reference to the UI text displaying the amount of the ore1 resource type in the inventory. ",                    "accessMod": "private",                    "varName": "ore1",                    "dirtyType": "TMPro.TMP_Text",                    "cleanType": "TMP_Text"                  },                  {                    "attributes": [                      "private",                      "TMP_Text"                    ],                    "description": "A reference to the UI text displaying the amount of the ore2 resource type in the inventory. ",                    "accessMod": "private",                    "varName": "ore2",                    "dirtyType": "TMPro.TMP_Text",                    "cleanType": "TMP_Text"                  },                  {                    "attributes": [                      "private",                      "TMP_Text"                    ],                    "description": "A reference to the UI text displaying the amount of the ore3 resource type in the inventory. ",                    "accessMod": "private",                    "varName": "ore3",                    "dirtyType": "TMPro.TMP_Text",                    "cleanType": "TMP_Text"                  },                  {                    "attributes": [                      "private",                      "TMP_Text"                    ],                    "description": "A reference to the UI text displaying the amount of the ore4 resource type in the inventory. ",                    "accessMod": "private",                    "varName": "ore4",                    "dirtyType": "TMPro.TMP_Text",                    "cleanType": "TMP_Text"                  },                  {                    "attributes": [                      "private",                      "TMP_Text"                    ],                    "description": "A reference to the UI text displaying the amount of the relic token resource type in the inventory. ",                    "accessMod": "private",                    "varName": "relicToken",                    "dirtyType": "TMPro.TMP_Text",                    "cleanType": "TMP_Text"                  },                  {                    "attributes": [                      "private",                      "TMP_Text"                    ],                    "description": "A reference to the UI text displaying the amount of the research point resource type in the inventory. ",                    "accessMod": "private",                    "varName": "researchPoint",                    "dirtyType": "TMPro.TMP_Text",                    "cleanType": "TMP_Text"                  },                  {                    "attributes": [                      "private",                      "TMP_Text"                    ],                    "description": "A reference to the UI text displaying the amount of the skill point resource type in the inventory. ",                    "accessMod": "private",                    "varName": "skillPoint",                    "dirtyType": "TMPro.TMP_Text",                    "cleanType": "TMP_Text"                  },                  {                    "attributes": [                      "private",                      "TMP_Text"                    ],                    "description": "A reference to the UI text displaying the amount of the tech point resource type in the inventory. ",                    "accessMod": "private",                    "varName": "techPoint",                    "dirtyType": "TMPro.TMP_Text",                    "cleanType": "TMP_Text"                  },                  {                    "attributes": [                      "private",                      "TMP_Text"                    ],                    "description": "A reference to the UI text displaying the amount of the antimatter resource type in the inventory. ",                    "accessMod": "private",                    "varName": "antimatter",                    "dirtyType": "TMPro.TMP_Text",                    "cleanType": "TMP_Text"                  },                  {                    "attributes": [                      "private",                      "float"                    ],                    "description": "The next time the UI should be updated with new information ",                    "accessMod": "private",                    "varName": "nextTime",                    "dirtyType": "System.Single",                    "cleanType": "float"                  },                  {                    "attributes": [                      "private",                      "float"                    ],                    "description": "The amount of time between UI updates. ",                    "accessMod": "private",                    "varName": "waitTime",                    "dirtyType": "System.Single",                    "cleanType": "float"                  }                ]              },              "inheritance": [                " MonoBehaviour"              ],              "accessModifier": "public",              "className": "InventoryManager",              "description": " <summary> Updates the UI in the logistics menu to correctly display the resources and building the player has in their inventory. </summary>",              "filePath": "C:\\Users\\queej\\Documents\\Coding\\Galanarius\\Assets\\Scripts\\Profile\\InventoryManager.cs",              "nameSpace": "",              "declaration": "public class InventoryManager : MonoBehaviour",              "functions": {                "private": [                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "<summary> Called on the first frame after the GameObjects creation, updating all the information displayed by the UI by calling FillFields(). </summary> ",                    "accessModifier": "private",                    "functionName": "Start"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "private",                    "functionName": "Awake"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "private",                    "functionName": "Update"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "<summary> Updates the UI displaying the information of what buildings and resources the in the inventory by calling UpdateResources() and UpdateBuildings(). </summary> ",                    "accessModifier": "private",                    "functionName": "FillFields"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "<summary> Updates all the text displaying the resources. </summary> ",                    "accessModifier": "private",                    "functionName": "UpdateResources"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "<summary> Updates all the buttons and text representing the buildings in the inventory. </summary> ",                    "accessModifier": "private",                    "functionName": "UpdateBuildings"                  }                ],                "public": [                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "<summary> Activates the UI object holding all the resources, and deactivates the UI object holding all the buildings. </summary> ",                    "accessModifier": "public",                    "functionName": "ShowResources"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "<summary> Activates the UI object holding all the buildings, and deactivates the UI object holding all the resources. </summary> ",                    "accessModifier": "public",                    "functionName": "ShowBuildings"                  }                ]              }            }          },          {            "subDir": [],            "currentDirectory": "PlayerCreationManager.cs",            "filePaths": [              "\\PlayerCreationManager.cs"            ],            "prevDirectory": "C:\\Users\\queej\\Documents\\Coding\\Galanarius\\Assets\\Scripts\\Profile",            "fileRepresentation": {              "imports": [                "System.Collections",                "System.Collections.Generic",                "UnityEngine",                "UnityEngine.UI",                "TMPro"              ],              "variables": {                "private": [                  {                    "attributes": [                      "private",                      "ProfileManager"                    ],                    "description": "A reference to the profile component storing the player's information once it has been generated. ",                    "accessMod": "private",                    "varName": "profile",                    "dirtyType": "ProfileManager",                    "cleanType": "ProfileManager"                  },                  {                    "attributes": [                      "private",                      "Text"                    ],                    "description": "The text from the input field representing the player's username. ",                    "accessMod": "private",                    "varName": "user",                    "dirtyType": "UnityEngine.UI.Text",                    "cleanType": "Text"                  },                  {                    "attributes": [                      "private",                      "TMP_Text"                    ],                    "description": "The text from the drop down menu representing the player's selected faction. ",                    "accessMod": "private",                    "varName": "fac",                    "dirtyType": "TMPro.TMP_Text",                    "cleanType": "TMP_Text"                  },                  {                    "attributes": [                      "private",                      "GameObject"                    ],                    "description": "The reference to the GameObject object which contains all the main menu elements. ",                    "accessMod": "private",                    "varName": "mainMenu",                    "dirtyType": "UnityEngine.GameObject",                    "cleanType": "GameObject"                  }                ]              },              "inheritance": [                " MonoBehaviour"              ],              "accessModifier": "public",              "className": "PlayerCreationManager",              "description": " <summary> Runs the input and UI for the player creation portion of the MainMenu scene. </summary>",              "filePath": "C:\\Users\\queej\\Documents\\Coding\\Galanarius\\Assets\\Scripts\\Profile\\PlayerCreationManager.cs",              "nameSpace": "",              "declaration": "public class PlayerCreationManager : MonoBehaviour",              "functions": {                "private": [                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "<summary> Runs on the first frame after the object's creation. If a saved profile is found, it defers to the main menu, calling the MainMenu() function. </summary> ",                    "accessModifier": "private",                    "functionName": "Start"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "<summary> Sets the main menu GameObject to active, revealing the main menu, and deactivates the object this component is on, hiding the player creation menu. </summary> ",                    "accessModifier": "private",                    "functionName": "MainMenu"                  }                ],                "public": [                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "<summary> Runs when the create button is pressed, creating a new profile object from the player's input, saving it to the profile component for later serialization and retrival. \\nThe MainMenu() function is then called. </summary> ",                    "accessModifier": "public",                    "functionName": "CreateCharacter"                  }                ]              }            }          },          {            "subDir": [],            "currentDirectory": "Profile.cs",            "filePaths": [              "\\Profile.cs"            ],            "prevDirectory": "C:\\Users\\queej\\Documents\\Coding\\Galanarius\\Assets\\Scripts\\Profile",            "fileRepresentation": {              "imports": [                "System.Collections",                "System.Collections.Generic",                "UnityEngine"              ],              "variables": {                "private": [                  {                    "attributes": [                      "private",                      "string"                    ],                    "description": "The username this profile is associated with (can be repeated). ",                    "accessMod": "private",                    "varName": "username",                    "dirtyType": "System.String",                    "cleanType": "string"                  },                  {                    "attributes": [                      "private",                      "string"                    ],                    "description": "The numeric identifier this profile is referenced by (unique, though always set to \"-1\" for now). ",                    "accessMod": "private",                    "varName": "identifier",                    "dirtyType": "System.String",                    "cleanType": "string"                  },                  {                    "attributes": [                      "private",                      "int"                    ],                    "description": "The level of the profile. ",                    "accessMod": "private",                    "varName": "level",                    "dirtyType": "System.Int32",                    "cleanType": "int"                  },                  {                    "attributes": [                      "private",                      "string"                    ],                    "description": "The faction this profile serves. ",                    "accessMod": "private",                    "varName": "faction",                    "dirtyType": "System.String",                    "cleanType": "string"                  },                  {                    "attributes": [                      "private",                      "string"                    ],                    "description": "The rank in the profile's faction. ",                    "accessMod": "private",                    "varName": "rank",                    "dirtyType": "System.String",                    "cleanType": "string"                  },                  {                    "attributes": [                      "private",                      "string"                    ],                    "description": "The name of the place where the profile currently is (if there is one). ",                    "accessMod": "private",                    "varName": "location",                    "dirtyType": "System.String",                    "cleanType": "string"                  },                  {                    "attributes": [                      "private",                      "int"                    ],                    "description": "The index of the body the profile is currently on. ",                    "accessMod": "private",                    "varName": "bodyIndex",                    "dirtyType": "System.Int32",                    "cleanType": "int"                  },                  {                    "attributes": [                      "private",                      "MapCoordinate"                    ],                    "description": "The map coordinates where the profile currently is (the xCoord and yCoord of the sector, and the dCoord for later dimensional location). ",                    "accessMod": "private",                    "varName": "mapCoordinates",                    "dirtyType": "MapCoordinate",                    "cleanType": "MapCoordinate"                  },                  {                    "attributes": [                      "private",                      "double"                    ],                    "description": "The experience the profile has towards leveling up. ",                    "accessMod": "private",                    "varName": "experience",                    "dirtyType": "System.Double",                    "cleanType": "double"                  },                  {                    "attributes": [                      "private",                      "float"                    ],                    "description": "The money the profile has. ",                    "accessMod": "private",                    "varName": "credits",                    "dirtyType": "System.Single",                    "cleanType": "float"                  },                  {                    "attributes": [                      "private",                      "ResourceManager"                    ],                    "description": "The reference to the resource manager storing all the profile's resources. ",                    "accessMod": "private",                    "varName": "resources",                    "dirtyType": "ResourceManager",                    "cleanType": "ResourceManager"                  },                  {                    "attributes": [                      "private",                      "Skills"                    ],                    "description": "The reference to the skills storing all the profile's skills. ",                    "accessMod": "private",                    "varName": "skills",                    "dirtyType": "Skills",                    "cleanType": "Skills"                  }                ]              },              "inheritance": [                "NO INHERITANCE"              ],              "accessModifier": "public",              "className": "Profile",              "description": " <summary> Stores all the data defining a profile. Used primarily to define a player for saving and reference in game. </summary>",              "filePath": "C:\\Users\\queej\\Documents\\Coding\\Galanarius\\Assets\\Scripts\\Profile\\Profile.cs",              "nameSpace": "",              "declaration": "public class Profile",              "functions": {                "private": [                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "<summary> Generates a unique ID for the profile (currently always returns a constant). </summary> <returns>\"-1\"</returns> ",                    "accessModifier": "private",                    "functionName": "GenID"                  }                ],                "public": [                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_MapCoordinate"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "value",                        "Item2": "MapCoordinate",                        "Item3": null                      }                    ],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "set_MapCoordinate"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "x",                        "Item2": "System.Int32",                        "Item3": null                      },                      {                        "Item1": "y",                        "Item2": "System.Int32",                        "Item3": null                      }                    ],                    "cleanParamList": [                      {                        "Item1": "int x,",                        "Item2": null                      },                      {                        "Item1": "int y",                        "Item2": null                      }                    ],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "SetMapCoordinates"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_Resources"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "value",                        "Item2": "ResourceManager",                        "Item3": null                      }                    ],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "set_Resources"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_Location"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "value",                        "Item2": "System.String",                        "Item3": null                      }                    ],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "set_Location"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_BodyIndex"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "value",                        "Item2": "System.Int32",                        "Item3": null                      }                    ],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "set_BodyIndex"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "<summary> Displays the basic information of the profile. </summary> <returns>name: username   \\nfaction-rank: faction-rank</returns> ",                    "accessModifier": "public",                    "functionName": "ToString"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "n",                        "Item2": "Node",                        "Item3": null                      }                    ],                    "cleanParamList": [                      {                        "Item1": "Node n",                        "Item2": null                      }                    ],                    "modifiers": [],                    "description": "<summary> Gatherers resources from a given node, passing itself in to appropriately account for skills, while the node accounts for its base and randomizaiton, modifying this profile object. </summary> <param name=\"n\">The node to gather from</param> ",                    "accessModifier": "public",                    "functionName": "GatherFrom"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "resource",                        "Item2": "System.String",                        "Item3": null                      },                      {                        "Item1": "percent",                        "Item2": "System.Single",                        "Item3": null                      }                    ],                    "cleanParamList": [                      {                        "Item1": "string resource,",                        "Item2": null                      },                      {                        "Item1": "float percent",                        "Item2": null                      }                    ],                    "modifiers": [],                    "description": "<summary> Gathers a specific resource at a given percentage. </summary> <param name=\"resource\">The resource to gather</param> <param name=\"percent\">The percent to gatehr.</param> ",                    "accessModifier": "public",                    "functionName": "Gather"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "err",                        "Item2": "System.String",                        "Item3": null                      }                    ],                    "cleanParamList": [                      {                        "Item1": "string err",                        "Item2": null                      }                    ],                    "modifiers": [],                    "description": "<summary> Displays an error with the Profile, if one occurs, in the console. </summary> <param name=\"err\"></param> ",                    "accessModifier": "public",                    "functionName": "Error"                  }                ]              }            }          },          {            "subDir": [],            "currentDirectory": "ProfileManager.cs",            "filePaths": [              "\\ProfileManager.cs"            ],            "prevDirectory": "C:\\Users\\queej\\Documents\\Coding\\Galanarius\\Assets\\Scripts\\Profile",            "fileRepresentation": {              "imports": [                "System.Collections",                "System.Collections.Generic",                "UnityEngine"              ],              "variables": {                "private": [                  {                    "attributes": [                      "private",                      "Profile"                    ],                    "description": "The profile object this component allows interaction with. ",                    "accessMod": "private",                    "varName": "profile",                    "dirtyType": "Profile",                    "cleanType": "Profile"                  },                  {                    "attributes": [                      "private",                      "float"                    ],                    "description": "The next time the profile can be saved. ",                    "accessMod": "private",                    "varName": "nextTime",                    "dirtyType": "System.Single",                    "cleanType": "float"                  },                  {                    "attributes": [                      "private",                      "float"                    ],                    "description": "The increment of time between saving. ",                    "accessMod": "private",                    "varName": "saveTime",                    "dirtyType": "System.Single",                    "cleanType": "float"                  }                ]              },              "inheritance": [                " MonoBehaviour"              ],              "accessModifier": "public",              "className": "ProfileManager",              "description": " <summary> The component storing a Profile object. </summary>",              "filePath": "C:\\Users\\queej\\Documents\\Coding\\Galanarius\\Assets\\Scripts\\Profile\\ProfileManager.cs",              "nameSpace": "",              "declaration": "public class ProfileManager : MonoBehaviour",              "functions": {                "private": [                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "<summary> Runs the first frame after creation or activation. Loads the profile if one exists, and restarts the timer. </summary> ",                    "accessModifier": "private",                    "functionName": "Awake"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "<summary> Runs every frame, saving if enough time has elapsed. </summary> ",                    "accessModifier": "private",                    "functionName": "Update"                  }                ],                "public": [                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "<summary> Saves the profile as long as the profile object is not blank. </summary> ",                    "accessModifier": "public",                    "functionName": "Save"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "<summary> Returns the profile the component stores. </summary> <returns>profile</returns> ",                    "accessModifier": "public",                    "functionName": "GetProfile"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "prof",                        "Item2": "Profile",                        "Item3": null                      }                    ],                    "cleanParamList": [                      {                        "Item1": "Profile prof",                        "Item2": null                      }                    ],                    "modifiers": [],                    "description": "<summary> Sets the profile to the prof parameter. </summary> <param name=\"prof\">The new profile value.</param> ",                    "accessModifier": "public",                    "functionName": "SetProfile"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "<summary> Deletes the saved profile. </summary> ",                    "accessModifier": "public",                    "functionName": "Delete"                  }                ]              }            }          },          {            "subDir": [],            "currentDirectory": "Skills.cs",            "filePaths": [              "\\Skills.cs"            ],            "prevDirectory": "C:\\Users\\queej\\Documents\\Coding\\Galanarius\\Assets\\Scripts\\Profile",            "fileRepresentation": {              "imports": [                "System.Collections",                "System.Collections.Generic",                "UnityEngine"              ],              "variables": {                "private": [                  {                    "attributes": [                      "private",                      "int"                    ],                    "description": "The score representing the reputation of the player or NPC (positive good, negative bad, abs/magnitude determines to what degree this is true). ",                    "accessMod": "private",                    "varName": "honor",                    "dirtyType": "System.Int32",                    "cleanType": "int"                  },                  {                    "attributes": [                      "private",                      "int"                    ],                    "description": "How well known the player or NPC is. ",                    "accessMod": "private",                    "varName": "renown",                    "dirtyType": "System.Int32",                    "cleanType": "int"                  },                  {                    "attributes": [                      "private",                      "int"                    ],                    "description": "The modifier used when attacking in general. ",                    "accessMod": "private",                    "varName": "attacking",                    "dirtyType": "System.Int32",                    "cleanType": "int"                  },                  {                    "attributes": [                      "private",                      "int"                    ],                    "description": "The modifier used when defending in general. ",                    "accessMod": "private",                    "varName": "defending",                    "dirtyType": "System.Int32",                    "cleanType": "int"                  },                  {                    "attributes": [                      "private",                      "int"                    ],                    "description": "The modifier used when collecting personnel. ",                    "accessMod": "private",                    "varName": "recruiting",                    "dirtyType": "System.Int32",                    "cleanType": "int"                  },                  {                    "attributes": [                      "private",                      "int"                    ],                    "description": "The modifier used when collecting research, or tech points. ",                    "accessMod": "private",                    "varName": "researching",                    "dirtyType": "System.Int32",                    "cleanType": "int"                  },                  {                    "attributes": [                      "private",                      "int"                    ],                    "description": "The modifier used when determining fuel usage and efficiency when flying ftl. ",                    "accessMod": "private",                    "varName": "ftlPiloting",                    "dirtyType": "System.Int32",                    "cleanType": "int"                  },                  {                    "attributes": [                      "private",                      "int"                    ],                    "description": "The modifier used when determining fuel usage and efficiency when flying sublight. ",                    "accessMod": "private",                    "varName": "sublightPiloting",                    "dirtyType": "System.Int32",                    "cleanType": "int"                  },                  {                    "attributes": [                      "private",                      "int"                    ],                    "description": "The modifier used when collecting crops. ",                    "accessMod": "private",                    "varName": "harvesting",                    "dirtyType": "System.Int32",                    "cleanType": "int"                  },                  {                    "attributes": [                      "private",                      "int"                    ],                    "description": "The modifier used when collecting seeds. ",                    "accessMod": "private",                    "varName": "farming",                    "dirtyType": "System.Int32",                    "cleanType": "int"                  },                  {                    "attributes": [                      "private",                      "int"                    ],                    "description": "The modifier used when collecting food. ",                    "accessMod": "private",                    "varName": "cooking",                    "dirtyType": "System.Int32",                    "cleanType": "int"                  },                  {                    "attributes": [                      "private",                      "int"                    ],                    "description": "The modifier used when collecting synthesized materials. ",                    "accessMod": "private",                    "varName": "synthesizing",                    "dirtyType": "System.Int32",                    "cleanType": "int"                  },                  {                    "attributes": [                      "private",                      "int"                    ],                    "description": "The modifier used when collecting heliums, or hydrogen. ",                    "accessMod": "private",                    "varName": "siphoning",                    "dirtyType": "System.Int32",                    "cleanType": "int"                  },                  {                    "attributes": [                      "private",                      "int"                    ],                    "description": "The modifier used when collecting oil. ",                    "accessMod": "private",                    "varName": "filtration",                    "dirtyType": "System.Int32",                    "cleanType": "int"                  },                  {                    "attributes": [                      "private",                      "int"                    ],                    "description": "The modifier used when collecting stone, slag, and ores. ",                    "accessMod": "private",                    "varName": "excavating",                    "dirtyType": "System.Int32",                    "cleanType": "int"                  },                  {                    "attributes": [                      "private",                      "int"                    ],                    "description": "The modifier used when collecting ore from other ore. ",                    "accessMod": "private",                    "varName": "smelting",                    "dirtyType": "System.Int32",                    "cleanType": "int"                  },                  {                    "attributes": [                      "private",                      "int"                    ],                    "description": "The modifier used when collecting resources from slag. ",                    "accessMod": "private",                    "varName": "sifting",                    "dirtyType": "System.Int32",                    "cleanType": "int"                  }                ]              },              "inheritance": [                "NO INHERITANCE"              ],              "accessModifier": "public",              "className": "Skills",              "description": " <summary> Stores all the skills of a player or NPC. </summary>",              "filePath": "C:\\Users\\queej\\Documents\\Coding\\Galanarius\\Assets\\Scripts\\Profile\\Skills.cs",              "nameSpace": "",              "declaration": "public class Skills",              "functions": {                "public": [                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_Honor"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "value",                        "Item2": "System.Int32",                        "Item3": null                      }                    ],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "set_Honor"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_Renown"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "value",                        "Item2": "System.Int32",                        "Item3": null                      }                    ],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "set_Renown"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_Attacking"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "value",                        "Item2": "System.Int32",                        "Item3": null                      }                    ],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "set_Attacking"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_Defending"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "value",                        "Item2": "System.Int32",                        "Item3": null                      }                    ],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "set_Defending"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_Recruiting"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "value",                        "Item2": "System.Int32",                        "Item3": null                      }                    ],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "set_Recruiting"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_Researching"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "value",                        "Item2": "System.Int32",                        "Item3": null                      }                    ],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "set_Researching"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_FTLPiloting"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "value",                        "Item2": "System.Int32",                        "Item3": null                      }                    ],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "set_FTLPiloting"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_SublightPiloting"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "value",                        "Item2": "System.Int32",                        "Item3": null                      }                    ],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "set_SublightPiloting"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_Harvesting"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "value",                        "Item2": "System.Int32",                        "Item3": null                      }                    ],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "set_Harvesting"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_Farming"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "value",                        "Item2": "System.Int32",                        "Item3": null                      }                    ],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "set_Farming"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_Cooking"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "value",                        "Item2": "System.Int32",                        "Item3": null                      }                    ],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "set_Cooking"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_Synthesizing"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "value",                        "Item2": "System.Int32",                        "Item3": null                      }                    ],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "set_Synthesizing"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_Siphoning"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "value",                        "Item2": "System.Int32",                        "Item3": null                      }                    ],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "set_Siphoning"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_Filtration"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "value",                        "Item2": "System.Int32",                        "Item3": null                      }                    ],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "set_Filtration"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_Excavating"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "value",                        "Item2": "System.Int32",                        "Item3": null                      }                    ],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "set_Excavating"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_Smelting"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "value",                        "Item2": "System.Int32",                        "Item3": null                      }                    ],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "set_Smelting"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_Sifting"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "value",                        "Item2": "System.Int32",                        "Item3": null                      }                    ],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "set_Sifting"                  }                ]              }            }          }        ],        "currentDirectory": "Profile",        "filePaths": [          "\\Profile\\BuildingItem.cs"        ],        "prevDirectory": "C:\\Users\\queej\\Documents\\Coding\\Galanarius\\Assets\\\\Scripts",        "fileRepresentation": null      },      {        "subDir": [          {            "subDir": [],            "currentDirectory": "Resource.cs",            "filePaths": [              "\\Resource.cs"            ],            "prevDirectory": "C:\\Users\\queej\\Documents\\Coding\\Galanarius\\Assets\\\\Scripts\\Resources",            "fileRepresentation": {              "imports": [                "System.Collections",                "System.Collections.Generic",                "UnityEngine",                "UnityEngine.UI"              ],              "variables": {                "private": [                  {                    "attributes": [                      "private",                      "int"                    ],                    "description": "xCoord * 50 = tile location on the Canvas x-axis. ",                    "accessMod": "private",                    "varName": "xCoord",                    "dirtyType": "System.Int32",                    "cleanType": "int"                  },                  {                    "attributes": [                      "private",                      "int"                    ],                    "description": "yCoord * 50 = tile location on the Canvas y-axis. ",                    "accessMod": "private",                    "varName": "yCoord",                    "dirtyType": "System.Int32",                    "cleanType": "int"                  },                  {                    "attributes": [                      "private",                      "Vector3"                    ],                    "description": "The starting position of the GameObject in order to correctly perform coordinate to world-space conversions. ",                    "accessMod": "private",                    "varName": "basePosition",                    "dirtyType": "UnityEngine.Vector3",                    "cleanType": "Vector3"                  },                  {                    "attributes": [                      "private",                      "ResourceType"                    ],                    "description": "The type of resource, is set in the class, and cannot be changed by the user. ",                    "accessMod": "private",                    "varName": "_resourceType",                    "dirtyType": "ResourceType",                    "cleanType": "ResourceType"                  },                  {                    "attributes": [                      "private",                      "Sprite"                    ],                    "description": "The sprite to display on the GameObject. ",                    "accessMod": "private",                    "varName": "sprite",                    "dirtyType": "UnityEngine.Sprite",                    "cleanType": "Sprite"                  },                  {                    "attributes": [                      "private",                      "Image"                    ],                    "description": "A reference to the Image displaying on this GameObject. ",                    "accessMod": "private",                    "varName": "resourceImage",                    "dirtyType": "UnityEngine.UI.Image",                    "cleanType": "Image"                  },                  {                    "attributes": [                      "private",                      "int"                    ],                    "description": "The amount of the resource in this GameObject. ",                    "accessMod": "private",                    "varName": "amount",                    "dirtyType": "System.Int32",                    "cleanType": "int"                  },                  {                    "attributes": [                      "private",                      "bool"                    ],                    "description": "Whether or not the resource has moved this frame. ",                    "accessMod": "private",                    "varName": "hasMoved",                    "dirtyType": "System.Boolean",                    "cleanType": "bool"                  },                  {                    "attributes": [                      "private",                      "NodeManager"                    ],                    "description": "A reference to the NodeManager component in the scene. ",                    "accessMod": "private",                    "varName": "nodeManager",                    "dirtyType": "NodeManager",                    "cleanType": "NodeManager"                  }                ]              },              "inheritance": [                " MonoBehaviour"              ],              "accessModifier": "public",              "className": "Resource",              "description": " All the types the resource can be <summary> Stores the information for a resource represented on-screen </summary>",              "filePath": "C:\\Users\\queej\\Documents\\Coding\\Galanarius\\Assets\\\\Scripts\\Resources\\Resource.cs",              "nameSpace": "",              "declaration": "public class Resource : MonoBehaviour",              "functions": {                "private": [                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "<summary> Runs on the first frame after the object is created to set things up. </summary> ",                    "accessModifier": "private",                    "functionName": "Start"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "<summary> Runs once every frame after the all Update methods are called. Resets the hasMoved variable to avoid any sticking or runaway resources. </summary> ",                    "accessModifier": "private",                    "functionName": "LateUpdate"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "<summary> Runs when the position of the resource is updated. </summary> ",                    "accessModifier": "private",                    "functionName": "OnMove"                  }                ],                "public": [                  {                    "dirtyParamList": [                      {                        "Item1": "x",                        "Item2": "System.Int32",                        "Item3": null                      },                      {                        "Item1": "y",                        "Item2": "System.Int32",                        "Item3": null                      }                    ],                    "cleanParamList": [                      {                        "Item1": "int x,",                        "Item2": null                      },                      {                        "Item1": "int y",                        "Item2": null                      }                    ],                    "modifiers": [],                    "description": "<summary> Changes the position of the resource in world space, and updates its locally stored coord appropriately. </summary> <param name=\"x\">The x-coordinate to move to.</param> <param name=\"y\">The y-coordinate to move to.</param> ",                    "accessModifier": "public",                    "functionName": "MoveCoords"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "<summary> Returns the x value of the resource. </summary> <returns>xCoord</returns> ",                    "accessModifier": "public",                    "functionName": "GetX"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "<summary> Returns the y value of the resource. </summary> <returns>yCoord</returns> ",                    "accessModifier": "public",                    "functionName": "GetY"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_Amount"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "value",                        "Item2": "System.Int32",                        "Item3": null                      }                    ],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "set_Amount"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_resourceType"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "value",                        "Item2": "ResourceType",                        "Item3": null                      }                    ],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "set_resourceType"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "<summary> Returns the hasMoved boolean. </summary> <returns>hasMoved</returns> ",                    "accessModifier": "public",                    "functionName": "HasMoved"                  }                ]              }            }          },          {            "subDir": [],            "currentDirectory": "ResourceManager.cs",            "filePaths": [              "\\ResourceManager.cs"            ],            "prevDirectory": "C:\\Users\\queej\\Documents\\Coding\\Galanarius\\Assets\\Scripts\\Resources",            "fileRepresentation": {              "imports": [                "System.Collections",                "System.Collections.Generic",                "UnityEngine"              ],              "variables": {                "private": [                  {                    "attributes": [                      "private",                      "int"                    ],                    "description": "The current number of personnel that are useable. ",                    "accessMod": "private",                    "varName": "personnelCurrent",                    "dirtyType": "System.Int32",                    "cleanType": "int"                  },                  {                    "attributes": [                      "private",                      "int"                    ],                    "description": "The maximum capacity of personnel to use. ",                    "accessMod": "private",                    "varName": "personnelMax",                    "dirtyType": "System.Int32",                    "cleanType": "int"                  },                  {                    "attributes": [                      "private",                      "int"                    ],                    "description": "The amount of helium1 in the resource manager. ",                    "accessMod": "private",                    "varName": "helium1",                    "dirtyType": "System.Int32",                    "cleanType": "int"                  },                  {                    "attributes": [                      "private",                      "int"                    ],                    "description": "The amount of helium2 in the resource manager. ",                    "accessMod": "private",                    "varName": "helium2",                    "dirtyType": "System.Int32",                    "cleanType": "int"                  },                  {                    "attributes": [                      "private",                      "int"                    ],                    "description": "The amount of helium3 in the resource manager. ",                    "accessMod": "private",                    "varName": "helium3",                    "dirtyType": "System.Int32",                    "cleanType": "int"                  },                  {                    "attributes": [                      "private",                      "int"                    ],                    "description": "The amount of hydrogen in the resource manager. ",                    "accessMod": "private",                    "varName": "hydrogen",                    "dirtyType": "System.Int32",                    "cleanType": "int"                  },                  {                    "attributes": [                      "private",                      "int"                    ],                    "description": "The amount of oil in the resource manager. ",                    "accessMod": "private",                    "varName": "oil",                    "dirtyType": "System.Int32",                    "cleanType": "int"                  },                  {                    "attributes": [                      "private",                      "int"                    ],                    "description": "The amount of ftl fuel in the resource manager. ",                    "accessMod": "private",                    "varName": "ftlFuel",                    "dirtyType": "System.Int32",                    "cleanType": "int"                  },                  {                    "attributes": [                      "private",                      "int"                    ],                    "description": "The amount of sublight fuel in the resource manager. ",                    "accessMod": "private",                    "varName": "sublightFuel",                    "dirtyType": "System.Int32",                    "cleanType": "int"                  },                  {                    "attributes": [                      "private",                      "int"                    ],                    "description": "The amount of natural material in the resource manager. ",                    "accessMod": "private",                    "varName": "natMat",                    "dirtyType": "System.Int32",                    "cleanType": "int"                  },                  {                    "attributes": [                      "private",                      "int"                    ],                    "description": "The amount of terran material in the resource manager. ",                    "accessMod": "private",                    "varName": "terraMat",                    "dirtyType": "System.Int32",                    "cleanType": "int"                  },                  {                    "attributes": [                      "private",                      "int"                    ],                    "description": "The amount of seed in the resource manager. ",                    "accessMod": "private",                    "varName": "seed",                    "dirtyType": "System.Int32",                    "cleanType": "int"                  },                  {                    "attributes": [                      "private",                      "int"                    ],                    "description": "The amount of crop in the resource manager. ",                    "accessMod": "private",                    "varName": "crop",                    "dirtyType": "System.Int32",                    "cleanType": "int"                  },                  {                    "attributes": [                      "private",                      "int"                    ],                    "description": "The amount of food in the resource manager. ",                    "accessMod": "private",                    "varName": "food",                    "dirtyType": "System.Int32",                    "cleanType": "int"                  },                  {                    "attributes": [                      "private",                      "int"                    ],                    "description": "The amount of synthetic1 in the resource manager. ",                    "accessMod": "private",                    "varName": "synth1",                    "dirtyType": "System.Int32",                    "cleanType": "int"                  },                  {                    "attributes": [                      "private",                      "int"                    ],                    "description": "The amount of synthetic2 in the resource manager. ",                    "accessMod": "private",                    "varName": "synth2",                    "dirtyType": "System.Int32",                    "cleanType": "int"                  },                  {                    "attributes": [                      "private",                      "int"                    ],                    "description": "The amount of synthetic3 in the resource manager. ",                    "accessMod": "private",                    "varName": "synth3",                    "dirtyType": "System.Int32",                    "cleanType": "int"                  },                  {                    "attributes": [                      "private",                      "int"                    ],                    "description": "The amount of synthetic4 in the resource manager. ",                    "accessMod": "private",                    "varName": "synth4",                    "dirtyType": "System.Int32",                    "cleanType": "int"                  },                  {                    "attributes": [                      "private",                      "int"                    ],                    "description": "The amount of stone in the resource manager. ",                    "accessMod": "private",                    "varName": "stone",                    "dirtyType": "System.Int32",                    "cleanType": "int"                  },                  {                    "attributes": [                      "private",                      "int"                    ],                    "description": "The amount of slag in the resource manager. ",                    "accessMod": "private",                    "varName": "slag",                    "dirtyType": "System.Int32",                    "cleanType": "int"                  },                  {                    "attributes": [                      "private",                      "int"                    ],                    "description": "The amount of ore1 in the resource manager. ",                    "accessMod": "private",                    "varName": "ore1",                    "dirtyType": "System.Int32",                    "cleanType": "int"                  },                  {                    "attributes": [                      "private",                      "int"                    ],                    "description": "The amount of ore2 in the resource manager. ",                    "accessMod": "private",                    "varName": "ore2",                    "dirtyType": "System.Int32",                    "cleanType": "int"                  },                  {                    "attributes": [                      "private",                      "int"                    ],                    "description": "The amount of ore3 in the resource manager. ",                    "accessMod": "private",                    "varName": "ore3",                    "dirtyType": "System.Int32",                    "cleanType": "int"                  },                  {                    "attributes": [                      "private",                      "int"                    ],                    "description": "The amount of ore4 in the resource manager. ",                    "accessMod": "private",                    "varName": "ore4",                    "dirtyType": "System.Int32",                    "cleanType": "int"                  },                  {                    "attributes": [                      "private",                      "int"                    ],                    "description": "The amount of relic token in the resource manager. ",                    "accessMod": "private",                    "varName": "relicToken",                    "dirtyType": "System.Int32",                    "cleanType": "int"                  },                  {                    "attributes": [                      "private",                      "int"                    ],                    "description": "The amount of research point in the resource manager. ",                    "accessMod": "private",                    "varName": "researchPoint",                    "dirtyType": "System.Int32",                    "cleanType": "int"                  },                  {                    "attributes": [                      "private",                      "int"                    ],                    "description": "The amount of skill point in the resource manager. ",                    "accessMod": "private",                    "varName": "skillPoint",                    "dirtyType": "System.Int32",                    "cleanType": "int"                  },                  {                    "attributes": [                      "private",                      "int"                    ],                    "description": "The amount of tech point in the resource manager. ",                    "accessMod": "private",                    "varName": "techPoint",                    "dirtyType": "System.Int32",                    "cleanType": "int"                  },                  {                    "attributes": [                      "private",                      "int"                    ],                    "description": "The amount of antimatter in the resource manager. ",                    "accessMod": "private",                    "varName": "antimatter",                    "dirtyType": "System.Int32",                    "cleanType": "int"                  }                ]              },              "inheritance": [                "NO INHERITANCE"              ],              "accessModifier": "public",              "className": "ResourceManager",              "description": " <summary> A structure to store the amounts of all types of resources a player or other entity could have, and methods to manage them. </summary>",              "filePath": "C:\\Users\\queej\\Documents\\Coding\\Galanarius\\Assets\\Scripts\\Resources\\ResourceManager.cs",              "nameSpace": "",              "declaration": "public class ResourceManager",              "functions": {                "public": [                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "<summary> Sets current personnel count to maximum. </summary> ",                    "accessModifier": "public",                    "functionName": "RefillPersonnel"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "resourceType",                        "Item2": "ResourceType",                        "Item3": null                      },                      {                        "Item1": "amount",                        "Item2": "System.Int32",                        "Item3": null                      }                    ],                    "cleanParamList": [                      {                        "Item1": "ResourceType resourceType,",                        "Item2": null                      },                      {                        "Item1": "int amount",                        "Item2": null                      }                    ],                    "modifiers": [],                    "description": "<summary> Adds the specified number to the given resource type. </summary> <param name=\"resourceType\">The type of resource to increase.</param> <param name=\"amount\">The amount to increase the given resource by.</param> ",                    "accessModifier": "public",                    "functionName": "AddToResource"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_PersonnelCurrent"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "value",                        "Item2": "System.Int32",                        "Item3": null                      }                    ],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "set_PersonnelCurrent"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_PersonnelMax"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "value",                        "Item2": "System.Int32",                        "Item3": null                      }                    ],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "set_PersonnelMax"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_Helium1"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "value",                        "Item2": "System.Int32",                        "Item3": null                      }                    ],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "set_Helium1"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_Helium2"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "value",                        "Item2": "System.Int32",                        "Item3": null                      }                    ],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "set_Helium2"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_Helium3"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "value",                        "Item2": "System.Int32",                        "Item3": null                      }                    ],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "set_Helium3"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_Hydrogen"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "value",                        "Item2": "System.Int32",                        "Item3": null                      }                    ],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "set_Hydrogen"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_Oil"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "value",                        "Item2": "System.Int32",                        "Item3": null                      }                    ],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "set_Oil"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_FTLFuel"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "value",                        "Item2": "System.Int32",                        "Item3": null                      }                    ],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "set_FTLFuel"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_SublightFuel"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "value",                        "Item2": "System.Int32",                        "Item3": null                      }                    ],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "set_SublightFuel"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_NatMat"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "value",                        "Item2": "System.Int32",                        "Item3": null                      }                    ],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "set_NatMat"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_TerraMat"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "value",                        "Item2": "System.Int32",                        "Item3": null                      }                    ],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "set_TerraMat"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_Seed"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "value",                        "Item2": "System.Int32",                        "Item3": null                      }                    ],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "set_Seed"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_Crop"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "value",                        "Item2": "System.Int32",                        "Item3": null                      }                    ],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "set_Crop"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_Food"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "value",                        "Item2": "System.Int32",                        "Item3": null                      }                    ],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "set_Food"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_Synth1"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "value",                        "Item2": "System.Int32",                        "Item3": null                      }                    ],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "set_Synth1"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_Synth2"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "value",                        "Item2": "System.Int32",                        "Item3": null                      }                    ],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "set_Synth2"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_Synth3"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "value",                        "Item2": "System.Int32",                        "Item3": null                      }                    ],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "set_Synth3"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_Synth4"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "value",                        "Item2": "System.Int32",                        "Item3": null                      }                    ],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "set_Synth4"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_Stone"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "value",                        "Item2": "System.Int32",                        "Item3": null                      }                    ],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "set_Stone"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_Slag"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "value",                        "Item2": "System.Int32",                        "Item3": null                      }                    ],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "set_Slag"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_Ore1"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "value",                        "Item2": "System.Int32",                        "Item3": null                      }                    ],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "set_Ore1"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_Ore2"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "value",                        "Item2": "System.Int32",                        "Item3": null                      }                    ],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "set_Ore2"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_Ore3"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "value",                        "Item2": "System.Int32",                        "Item3": null                      }                    ],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "set_Ore3"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_Ore4"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "value",                        "Item2": "System.Int32",                        "Item3": null                      }                    ],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "set_Ore4"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_RelicToken"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "value",                        "Item2": "System.Int32",                        "Item3": null                      }                    ],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "set_RelicToken"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_ResearchPoint"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "value",                        "Item2": "System.Int32",                        "Item3": null                      }                    ],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "set_ResearchPoint"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_SkillPoint"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "value",                        "Item2": "System.Int32",                        "Item3": null                      }                    ],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "set_SkillPoint"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_TechPoint"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "value",                        "Item2": "System.Int32",                        "Item3": null                      }                    ],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "set_TechPoint"                  },                  {                    "dirtyParamList": [],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "get_Antimatter"                  },                  {                    "dirtyParamList": [                      {                        "Item1": "value",                        "Item2": "System.Int32",                        "Item3": null                      }                    ],                    "cleanParamList": [],                    "modifiers": [],                    "description": "",                    "accessModifier": "public",                    "functionName": "set_Antimatter"                  }                ]              }            }          }        ],        "currentDirectory": "Resources",        "filePaths": [          "\\Resources\\Resource.cs"        ],        "prevDirectory": "C:\\Users\\queej\\Documents\\Coding\\Galanarius\\Assets\\\\Scripts",        "fileRepresentation": null      }    ],    "currentDirectory": "Scripts",    "filePaths": [      "\\Scripts\\Buildings\\Building.cs",      "\\Scripts\\Buildings\\BuildingManager.cs",      "\\Scripts\\Buildings\\BuildingProcessor.cs",      "\\Scripts\\Buildings\\PlacingSystem.cs",      "\\Scripts\\Map\\Galaxy.cs",      "\\Scripts\\Map\\MapCoordinate.cs",      "\\Scripts\\Map\\MapInfoUpdate.cs",      "\\Scripts\\Map\\MapManager.cs",      "\\Scripts\\Map\\Node.cs",      "\\Scripts\\Map\\NodeManager.cs",      "\\Scripts\\Map\\NodeManagerData.cs",      "\\Scripts\\Map\\NodeTile.cs",      "\\Scripts\\Map\\NodeTileData.cs",      "\\Scripts\\Map\\Planet.cs",      "\\Scripts\\Map\\Planetoid.cs",      "\\Scripts\\Map\\Sector.cs",      "\\Scripts\\Misc\\Constants.cs",      "\\Scripts\\Misc\\LevelLoader.cs",      "\\Scripts\\Misc\\LogisticsViewChange.cs",      "\\Scripts\\Misc\\SaveSystem.cs",      "\\Scripts\\Misc\\TestingDisplay.cs",      "\\Scripts\\Profile\\BuildingItem.cs",      "\\Scripts\\Profile\\InventoryManager.cs",      "\\Scripts\\Profile\\PlayerCreationManager.cs",      "\\Scripts\\Profile\\Profile.cs",      "\\Scripts\\Profile\\ProfileManager.cs",      "\\Scripts\\Profile\\Skills.cs",      "\\Scripts\\Resources\\Resource.cs",      "\\Scripts\\Resources\\ResourceManager.cs"    ],    "prevDirectory": "C:\\Users\\queej\\Documents\\Coding\\Galanarius\\Assets",    "fileRepresentation": null  },  "fileList": [    "\\Scripts\\Buildings\\Building.cs",    "\\Scripts\\Buildings\\BuildingManager.cs",    "\\Scripts\\Buildings\\BuildingProcessor.cs",    "\\Scripts\\Buildings\\PlacingSystem.cs",    "\\Scripts\\Map\\Galaxy.cs",    "\\Scripts\\Map\\MapCoordinate.cs",    "\\Scripts\\Map\\MapInfoUpdate.cs",    "\\Scripts\\Map\\MapManager.cs",    "\\Scripts\\Map\\Node.cs",    "\\Scripts\\Map\\NodeManager.cs",    "\\Scripts\\Map\\NodeManagerData.cs",    "\\Scripts\\Map\\NodeTile.cs",    "\\Scripts\\Map\\NodeTileData.cs",    "\\Scripts\\Map\\Planet.cs",    "\\Scripts\\Map\\Planetoid.cs",    "\\Scripts\\Map\\Sector.cs",    "\\Scripts\\Misc\\Constants.cs",    "\\Scripts\\Misc\\LevelLoader.cs",    "\\Scripts\\Misc\\LogisticsViewChange.cs",    "\\Scripts\\Misc\\SaveSystem.cs",    "\\Scripts\\Misc\\TestingDisplay.cs",    "\\Scripts\\Profile\\BuildingItem.cs",    "\\Scripts\\Profile\\InventoryManager.cs",    "\\Scripts\\Profile\\PlayerCreationManager.cs",    "\\Scripts\\Profile\\Profile.cs",    "\\Scripts\\Profile\\ProfileManager.cs",    "\\Scripts\\Profile\\Skills.cs",    "\\Scripts\\Resources\\Resource.cs",    "\\Scripts\\Resources\\ResourceManager.cs"  ],  "directoryExclusionsList": [    "\\Tests"  ]};const acknowledgements = `Using Unity 2019.4 LTS (most recent version used: 2019.4.25f1)

This documentation site is created and styled using uDocumentationGenerator from the Unity Asset store.
`;const description = `**NOTE:** *THIS IS A WORK IN PROGRESS*

Galanarius is a prototype of a resource management game. It has full map data capabilities, and generation of maps in part or whole, as well as persistence between sessions for the map data at all scopes, and the user. Currently buildings are not persistent in their placement, and the resources added are hardcoded, though making it relative to the node type is possible with the current backend implementation.

The prototype includes the map backend, saving backend, UI interactions, and building system (with easy implementation of new building types).

As it stands now, the project is easily extensible. With a few refactors of the earlier parts of the project, all parts of the backend could be extended with ease using the factory pattern and enumerators (rather than strings and individual classes).
`;const userInformation = {"projectName": "Galanarius","authorName": "Jonah McConnell","version": "0.1",};const gettingStarted = `# Getting Started

To use the app, simply scroll down on the iframe below, and enter fullscreen, by hitting the button in the bottom right of the iframe, in order to view the entire game screen. To use, click on the grid in the game menu. Press b to open the inventory, click on a building button to select it, and click on any space on the grid to place it once the inventory is closed. Press space when the inventory is closed to pause the simulation time.
`;